{"/home/travis/build/npmtest/node-npmtest-react-redux-form/test.js":"/* istanbul instrument in package npmtest_react_redux_form */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-redux-form/lib.npmtest_react_redux_form.js":"/* istanbul instrument in package npmtest_react_redux_form */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_redux_form = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_redux_form = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-redux-form/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-redux-form && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_redux_form */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_redux_form\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_redux_form.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_react_redux_form.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_redux_form.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_react_redux_form.__dirname +\n                    '/lib.npmtest_react_redux_form.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.track = exports.getModel = exports.getField = exports.form = exports.batched = exports.modeled = exports.createFieldClass = exports.Fieldset = exports.Errors = exports.LocalForm = exports.Form = exports.Control = exports.Field = exports.controls = exports.actionTypes = exports.actions = exports.initialFieldState = exports.createForms = exports.combineForms = exports.modelReducer = exports.formReducer = undefined;\n\nvar _actions = require('./actions');\n\nvar _actions2 = _interopRequireDefault(_actions);\n\nvar _actionTypes = require('./action-types');\n\nvar _actionTypes2 = _interopRequireDefault(_actionTypes);\n\nvar _fieldComponent = require('./components/field-component');\n\nvar _fieldComponent2 = _interopRequireDefault(_fieldComponent);\n\nvar _fieldsetComponent = require('./components/fieldset-component');\n\nvar _fieldsetComponent2 = _interopRequireDefault(_fieldsetComponent);\n\nvar _controlComponent = require('./components/control-component');\n\nvar _controlComponent2 = _interopRequireDefault(_controlComponent);\n\nvar _formComponent = require('./components/form-component');\n\nvar _formComponent2 = _interopRequireDefault(_formComponent);\n\nvar _localFormComponent = require('./components/local-form-component');\n\nvar _localFormComponent2 = _interopRequireDefault(_localFormComponent);\n\nvar _errorsComponent = require('./components/errors-component');\n\nvar _errorsComponent2 = _interopRequireDefault(_errorsComponent);\n\nvar _controlPropsMap = require('./constants/control-props-map');\n\nvar _controlPropsMap2 = _interopRequireDefault(_controlPropsMap);\n\nvar _modeledEnhancer = require('./enhancers/modeled-enhancer');\n\nvar _modeledEnhancer2 = _interopRequireDefault(_modeledEnhancer);\n\nvar _batchedEnhancer = require('./enhancers/batched-enhancer');\n\nvar _batchedEnhancer2 = _interopRequireDefault(_batchedEnhancer);\n\nvar _formReducer = require('./reducers/form-reducer');\n\nvar _formReducer2 = _interopRequireDefault(_formReducer);\n\nvar _initialFieldState = require('./constants/initial-field-state');\n\nvar _initialFieldState2 = _interopRequireDefault(_initialFieldState);\n\nvar _formsReducer = require('./reducers/forms-reducer');\n\nvar _formsReducer2 = _interopRequireDefault(_formsReducer);\n\nvar _modelReducer = require('./reducers/model-reducer');\n\nvar _modelReducer2 = _interopRequireDefault(_modelReducer);\n\nvar _track = require('./utils/track');\n\nvar _track2 = _interopRequireDefault(_track);\n\nvar _getFieldFromState = require('./utils/get-field-from-state');\n\nvar _getFieldFromState2 = _interopRequireDefault(_getFieldFromState);\n\nvar _get = require('./utils/get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nvar _form = require('./form');\n\nvar _form2 = _interopRequireDefault(_form);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.formReducer = _formReducer2.default;\nexports.modelReducer = _modelReducer2.default;\nexports.combineForms = _formsReducer2.default;\nexports.createForms = _formsReducer.createForms;\nexports.initialFieldState = _initialFieldState2.default;\nexports.actions = _actions2.default;\nexports.actionTypes = _actionTypes2.default;\nexports.controls = _controlPropsMap2.default;\nexports.Field = _fieldComponent2.default;\nexports.Control = _controlComponent2.default;\nexports.Form = _formComponent2.default;\nexports.LocalForm = _localFormComponent2.default;\nexports.Errors = _errorsComponent2.default;\nexports.Fieldset = _fieldsetComponent2.default;\nexports.createFieldClass = _fieldComponent.createFieldClass;\nexports.modeled = _modeledEnhancer2.default;\nexports.batched = _batchedEnhancer2.default;\nexports.form = _form2.default;\nexports.getField = _getFieldFromState2.default;\nexports.getModel = _get2.default;\nexports.track = _track2.default;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/actions/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _fieldActions = require('./field-actions');\n\nvar _fieldActions2 = _interopRequireDefault(_fieldActions);\n\nvar _modelActions = require('./model-actions');\n\nvar _modelActions2 = _interopRequireDefault(_modelActions);\n\nvar _batchActions = require('./batch-actions');\n\nvar _batchActions2 = _interopRequireDefault(_batchActions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar actions = _extends({}, _fieldActions2.default, _modelActions2.default, {\n  batch: _batchActions2.default\n});\n\nexports.default = actions;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/actions/field-actions.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFieldActions = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _get2 = require('../utils/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _mapValues = require('../utils/map-values');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nvar _actionTypes = require('../action-types');\n\nvar _actionTypes2 = _interopRequireDefault(_actionTypes);\n\nvar _batchActions = require('./batch-actions');\n\nvar _batchActions2 = _interopRequireDefault(_batchActions);\n\nvar _getValidity = require('../utils/get-validity');\n\nvar _getValidity2 = _interopRequireDefault(_getValidity);\n\nvar _isValidityValid = require('../utils/is-validity-valid');\n\nvar _isValidityValid2 = _interopRequireDefault(_isValidityValid);\n\nvar _isValidityInvalid = require('../utils/is-validity-invalid');\n\nvar _isValidityInvalid2 = _interopRequireDefault(_isValidityInvalid);\n\nvar _invertValidity = require('../utils/invert-validity');\n\nvar _invertValidity2 = _interopRequireDefault(_invertValidity);\n\nvar _track = require('../utils/track');\n\nvar _getForm = require('../utils/get-form');\n\nvar _getForm2 = _interopRequireDefault(_getForm);\n\nvar _getFieldFromState = require('../utils/get-field-from-state');\n\nvar _getFieldFromState2 = _interopRequireDefault(_getFieldFromState);\n\nvar _nullAction = require('../constants/null-action');\n\nvar _nullAction2 = _interopRequireDefault(_nullAction);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar defaultStrategies = {\n  get: _get3.default,\n  getForm: _getForm2.default,\n  getFieldFromState: _getFieldFromState2.default\n};\n\nfunction createFieldActions() {\n  var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultStrategies;\n\n  var addIntent = function addIntent(model, intent) {\n    return {\n      type: _actionTypes2.default.ADD_INTENT,\n      model: model,\n      intent: intent\n    };\n  };\n\n  var clearIntents = function clearIntents(model, intents) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return {\n      type: _actionTypes2.default.CLEAR_INTENTS,\n      model: model,\n      intents: intents,\n      options: options\n    };\n  };\n\n  var focus = function focus(model, value) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return _extends({\n      type: _actionTypes2.default.FOCUS,\n      model: model,\n      value: value\n    }, options);\n  };\n\n  var silentFocus = function silentFocus(model, value) {\n    return focus(model, value, {\n      silent: true\n    });\n  };\n\n  var blur = function blur(model) {\n    return {\n      type: _actionTypes2.default.BLUR,\n      model: model\n    };\n  };\n\n  var setPristine = function setPristine(model) {\n    return {\n      type: _actionTypes2.default.SET_PRISTINE,\n      model: model\n    };\n  };\n\n  var setDirty = function setDirty(model) {\n    return {\n      type: _actionTypes2.default.SET_DIRTY,\n      model: model\n    };\n  };\n\n  var setInitial = function setInitial(model) {\n    return {\n      type: _actionTypes2.default.SET_INITIAL,\n      model: model\n    };\n  };\n\n  var setPending = function setPending(model) {\n    var pending = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var options = arguments[2];\n    return _extends({\n      type: _actionTypes2.default.SET_PENDING,\n      model: model,\n      pending: pending\n    }, options);\n  };\n\n  var setValidating = function setValidating(model) {\n    var validating = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return {\n      type: _actionTypes2.default.SET_VALIDATING,\n      model: model,\n      validating: validating\n    };\n  };\n\n  var setValidity = function setValidity(model, validity) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return _extends({\n      type: options.errors ? _actionTypes2.default.SET_ERRORS : _actionTypes2.default.SET_VALIDITY,\n      model: model\n    }, options, _defineProperty({}, options.errors ? 'errors' : 'validity', validity));\n  };\n\n  var resetValidity = function resetValidity(model) {\n    var omitKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return {\n      type: _actionTypes2.default.RESET_VALIDITY,\n      model: model,\n      omitKeys: omitKeys\n    };\n  };\n\n  var setFieldsValidity = function setFieldsValidity(model, fieldsValidity) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return {\n      type: _actionTypes2.default.SET_FIELDS_VALIDITY,\n      model: model,\n      fieldsValidity: fieldsValidity,\n      options: options\n    };\n  };\n\n  var setErrors = function setErrors(model, errors) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return setValidity(model, errors, _extends({}, options, {\n      errors: true\n    }));\n  };\n\n  var setFieldsErrors = function setFieldsErrors(model, fieldsErrors, options) {\n    return setFieldsValidity(model, fieldsErrors, _extends({}, options, {\n      errors: true\n    }));\n  };\n\n  var resetErrors = resetValidity;\n\n  var setTouched = function setTouched(model) {\n    return {\n      type: _actionTypes2.default.SET_TOUCHED,\n      model: model\n    };\n  };\n\n  var setUntouched = function setUntouched(model) {\n    return {\n      type: _actionTypes2.default.SET_UNTOUCHED,\n      model: model\n    };\n  };\n\n  var asyncSetValidity = function asyncSetValidity(model, validator) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return function (dispatch, getState) {\n      var value = s.get(getState(), model);\n\n      dispatch(setValidating(model, true));\n\n      var done = function done(validity) {\n        dispatch(setValidity(model, validity, _extends({\n          async: true\n        }, options)));\n      };\n\n      var immediateResult = validator(value, done);\n\n      if (typeof immediateResult !== 'undefined') {\n        done(immediateResult);\n      }\n    };\n  };\n\n  var asyncSetErrors = function asyncSetErrors(model, validator) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return asyncSetValidity(model, validator, _extends({\n      errors: true\n    }, options));\n  };\n\n  var setSubmitted = function setSubmitted(model) {\n    var submitted = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return {\n      type: _actionTypes2.default.SET_SUBMITTED,\n      model: model,\n      submitted: submitted\n    };\n  };\n\n  var setSubmitFailed = function setSubmitFailed(model) {\n    var submitFailed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var options = arguments[2];\n    return _extends({\n      type: _actionTypes2.default.SET_SUBMIT_FAILED,\n      model: model,\n      submitFailed: submitFailed\n    }, options);\n  };\n\n  var submit = function submit(model, promise) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (typeof promise === 'undefined') {\n      return addIntent(model, { type: 'submit' });\n    }\n\n    return function (dispatch, getState) {\n      if (options.validate) {\n        var form = s.getForm(getState(), model);\n\n        (0, _invariant2.default)(form, 'Unable to submit form with validation. ' + 'Could not find form for \"%s\" in the store.', model);\n\n        if (!form.$form.valid) {\n          return dispatch(_nullAction2.default);\n        }\n\n        dispatch(setPending(model, true));\n      } else if (options.validators || options.errors) {\n        var validators = options.validators || options.errors;\n        var isErrors = options.errors;\n        var value = s.get(getState(), model);\n        var validity = (0, _getValidity2.default)(validators, value);\n        var valid = options.errors ? !(0, _isValidityInvalid2.default)(validity) : (0, _isValidityValid2.default)(validity);\n\n        if (!valid) {\n          return dispatch(isErrors ? setErrors(model, validity) : setValidity(model, validity));\n        }\n\n        dispatch((0, _batchActions2.default)(model, [setValidity(model, isErrors ? (0, _invertValidity2.default)(validity) : validity), setPending(model, true)]));\n      } else {\n        dispatch(setPending(model, true));\n      }\n\n      var errorsAction = options.fields ? setFieldsErrors : setErrors;\n\n      promise.then(function (response) {\n        dispatch((0, _batchActions2.default)(model, [setSubmitted(model, true), setValidity(model, response)]));\n      }).catch(function (error) {\n        dispatch((0, _batchActions2.default)(model, [setSubmitFailed(model), errorsAction(model, error, { async: true })]));\n      });\n\n      return promise;\n    };\n  };\n\n  var submitFields = function submitFields(model, promise) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return submit(model, promise, _extends({}, options, {\n      fields: true\n    }));\n  };\n\n  var validSubmit = function validSubmit(model, promise) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return submit(model, promise, _extends({}, options, {\n      validate: true\n    }));\n  };\n\n  var validate = function validate(model, validators) {\n    return function (dispatch, getState) {\n      var value = s.get(getState(), model);\n      var validity = (0, _getValidity2.default)(validators, value);\n\n      dispatch(setValidity(model, validity));\n    };\n  };\n\n  var validateErrors = function validateErrors(model, errorValidators) {\n    return function (dispatch, getState) {\n      var value = s.get(getState(), model);\n      var errors = (0, _getValidity2.default)(errorValidators, value);\n\n      dispatch(setValidity(model, errors, { errors: true }));\n    };\n  };\n\n  var validateFields = function validateFields(model, fieldValidators) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return function (dispatch, getState) {\n      var modelValue = s.get(getState(), model);\n\n      var fieldsValidity = (0, _mapValues2.default)(fieldValidators, function (validator, field) {\n        var fieldValue = field ? s.get(modelValue, field) : modelValue;\n\n        var fieldValidity = (0, _getValidity2.default)(validator, fieldValue);\n\n        return fieldValidity;\n      });\n\n      var fieldsValiditySetter = options.errors ? setFieldsErrors : setFieldsValidity;\n\n      dispatch(fieldsValiditySetter(model, fieldsValidity));\n    };\n  };\n\n  var validateFieldsErrors = function validateFieldsErrors(model, fieldErrorsValidators) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return validateFields(model, fieldErrorsValidators, _extends({}, options, {\n      errors: true\n    }));\n  };\n\n  return (0, _mapValues2.default)({\n    blur: blur,\n    focus: focus,\n    silentFocus: silentFocus,\n    submit: submit,\n    submitFields: submitFields,\n    validSubmit: validSubmit,\n    setDirty: setDirty,\n    setErrors: setErrors,\n    setInitial: setInitial,\n    setPending: setPending,\n    setValidating: setValidating,\n    setPristine: setPristine,\n    setSubmitted: setSubmitted,\n    setSubmitFailed: setSubmitFailed,\n    setTouched: setTouched,\n    setUntouched: setUntouched,\n    setValidity: setValidity,\n    setFieldsValidity: setFieldsValidity,\n    setFieldsErrors: setFieldsErrors,\n    resetValidity: resetValidity,\n    resetErrors: resetErrors,\n    validate: validate,\n    validateErrors: validateErrors,\n    validateFields: validateFields,\n    validateFieldsErrors: validateFieldsErrors,\n    asyncSetValidity: asyncSetValidity,\n    asyncSetErrors: asyncSetErrors,\n    addIntent: addIntent,\n    clearIntents: clearIntents\n  }, _track.trackable);\n}\n\nexports.createFieldActions = createFieldActions;\nexports.default = createFieldActions();","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/get.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = get;\n\nvar _lodash = require('lodash.get');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _endsWith = require('./ends-with');\n\nvar _endsWith2 = _interopRequireDefault(_endsWith);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction get(object, path, defaultValue) {\n  var modelString = path;\n\n  if (typeof path === 'number') {\n    var result = object[path];\n\n    return result === undefined ? defaultValue : result;\n  }\n\n  if (!path.length) return object;\n\n  if ((0, _endsWith2.default)(modelString, '.')) {\n    modelString = modelString.slice(0, -1);\n  } else if ((0, _endsWith2.default)(modelString, '[]')) {\n    modelString = modelString.slice(0, -2);\n  }\n\n  return (0, _lodash2.default)(object, modelString, defaultValue);\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/ends-with.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = endsWith;\nfunction endsWith(string, subString) {\n  if (typeof string !== 'string') return false;\n\n  var lastIndex = string.lastIndexOf(subString);\n\n  return lastIndex !== -1 && lastIndex + subString.length === string.length;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/map-values.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction mapValues(object, iteratee) {\n  var result = {};\n\n  Object.keys(object || {}).forEach(function (key) {\n    result[key] = iteratee(object[key], key, object);\n  });\n\n  return result;\n}\n\nexports.default = mapValues;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/action-types.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar actionTypes = {\n  BLUR: 'rrf/blur',\n  CHANGE: 'rrf/change',\n  FOCUS: 'rrf/focus',\n  RESET: 'rrf/reset',\n  VALIDATE: 'rrf/validate',\n  SET_DIRTY: 'rrf/setDirty',\n  SET_ERRORS: 'rrf/setErrors',\n  SET_INITIAL: 'rrf/setInitial',\n  SET_PENDING: 'rrf/setPending',\n  SET_PRISTINE: 'rrf/setPristine',\n  SET_SUBMITTED: 'rrf/setSubmitted',\n  SET_SUBMIT_FAILED: 'rrf/setSubmitFailed',\n  SET_TOUCHED: 'rrf/setTouched',\n  SET_UNTOUCHED: 'rrf/setUntouched',\n  SET_VALIDITY: 'rrf/setValidity',\n  SET_VALIDATING: 'rrf/setValidating',\n  SET_FIELDS_VALIDITY: 'rrf/setFieldsValidity',\n  SET_VIEW_VALUE: 'rrf/setViewValue',\n  RESET_VALIDITY: 'rrf/resetValidity',\n  BATCH: 'rrf/batch',\n  NULL: null,\n  ADD_INTENT: 'rrf/addIntent',\n  CLEAR_INTENTS: 'rrf/clearIntents'\n};\n\nexports.default = actionTypes;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/actions/batch-actions.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dispatchBatchIfNeeded = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _actionTypes = require('../action-types');\n\nvar _actionTypes2 = _interopRequireDefault(_actionTypes);\n\nvar _partition3 = require('../utils/partition');\n\nvar _partition4 = _interopRequireDefault(_partition3);\n\nvar _isPlainObject = require('../utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _track = require('../utils/track');\n\nvar _nullAction = require('../constants/null-action');\n\nvar _nullAction2 = _interopRequireDefault(_nullAction);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar batch = (0, _track.trackable)(function (model, actions) {\n  var dispatchableActions = actions.filter(function (action) {\n    return !!action;\n  });\n\n  if (!dispatchableActions.length) return _nullAction2.default;\n\n  if (dispatchableActions.length && dispatchableActions.every(_isPlainObject2.default)) {\n    if (dispatchableActions.length === 1) {\n      return dispatchableActions[0];\n    }\n\n    return {\n      type: _actionTypes2.default.BATCH,\n      model: model,\n      actions: dispatchableActions\n    };\n  }\n\n  var _partition = (0, _partition4.default)(dispatchableActions, function (action) {\n    return typeof action !== 'function';\n  }),\n      _partition2 = _slicedToArray(_partition, 2),\n      plainActions = _partition2[0],\n      actionThunks = _partition2[1];\n\n  if (!actionThunks.length) {\n    if (plainActions.length > 1) {\n      return {\n        type: _actionTypes2.default.BATCH,\n        model: model,\n        actions: plainActions\n      };\n    } else if (plainActions.length === 1) {\n      return plainActions[0];\n    }\n  }\n\n  return function (dispatch) {\n    if (plainActions.length > 1) {\n      dispatch({\n        type: _actionTypes2.default.BATCH,\n        model: model,\n        actions: plainActions\n      });\n    } else if (plainActions.length === 1) {\n      dispatch(plainActions[0]);\n    }\n    actionThunks.forEach(dispatch);\n  };\n});\n\nfunction dispatchBatchIfNeeded(model, actions, dispatch) {\n  if (!actions.length) return void 0;\n\n  var dispatchableActions = actions.filter(function (action) {\n    return !!action;\n  });\n\n  if (!dispatchableActions.length) return void 0;\n\n  return dispatch(batch(model, dispatchableActions));\n}\n\nexports.default = batch;\nexports.dispatchBatchIfNeeded = dispatchBatchIfNeeded;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/partition.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = partition;\nfunction partition(collection, predicate) {\n  var result = [[], []];\n\n  collection.forEach(function (item, index) {\n    if (predicate(item, index, collection)) {\n      result[0].push(item);\n    } else {\n      result[1].push(item);\n    }\n  });\n\n  return result;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/is-plain-object.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = isPlainObject;\n// Adapted from https://github.com/jonschlinkert/is-plain-object\nfunction isObject(val) {\n  return val != null && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && Array.isArray(val) === false;\n}\n\nfunction isObjectObject(o) {\n  return isObject(o) === true && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  var ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  var prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/track.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.trackable = exports.createTrack = undefined;\n\nvar _findKey = require('../utils/find-key');\n\nvar _findKey2 = _interopRequireDefault(_findKey);\n\nvar _get2 = require('../utils/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _iteratee = require('../utils/iteratee');\n\nvar _iteratee2 = _interopRequireDefault(_iteratee);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nvar defaultStrategy = {\n  get: _get3.default\n};\n\nfunction createTrack() {\n  var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultStrategy;\n\n  return function track(model) {\n    for (var _len = arguments.length, predicates = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      predicates[_key - 1] = arguments[_key];\n    }\n\n    var isPartial = model[0] === '.';\n\n    return function (fullState, parentModel) {\n      var childModel = isPartial ? model.slice(1) : model;\n      var state = isPartial ? s.get(fullState, parentModel) : fullState;\n\n      var _childModel$split = childModel.split(/\\[\\]\\.?/),\n          _childModel$split2 = _toArray(_childModel$split),\n          parentModelPath = _childModel$split2[0],\n          childModelPaths = _childModel$split2.slice(1);\n\n      var fullPath = parentModelPath;\n      var subState = s.get(state, fullPath);\n\n      predicates.forEach(function (predicate, i) {\n        var childModelPath = childModelPaths[i];\n        var predicateIteratee = (0, _iteratee2.default)(predicate);\n\n        var subPath = childModelPath ? (0, _findKey2.default)(subState, predicateIteratee) + '.' + childModelPath : '' + (0, _findKey2.default)(subState, predicateIteratee);\n\n        subState = s.get(subState, subPath);\n        fullPath += '.' + subPath;\n      });\n\n      return isPartial ? [parentModel, fullPath].join('.') : fullPath;\n    };\n  };\n}\n\nvar track = createTrack();\n\nfunction trackable(actionCreator) {\n  return function (model) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (typeof model === 'function') {\n      return function (dispatch, getState) {\n        var modelPath = model(getState());\n\n        dispatch(actionCreator.apply(undefined, [modelPath].concat(args)));\n      };\n    }\n\n    return actionCreator.apply(undefined, [model].concat(args));\n  };\n}\n\nexports.default = track;\nexports.createTrack = createTrack;\nexports.trackable = trackable;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/find-key.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findKey;\nfunction findKey(object, predicate) {\n  var resultKey = void 0;\n\n  Object.keys(object).some(function (key) {\n    var isKey = predicate(object[key], key, object);\n\n    if (isKey) {\n      resultKey = key;\n      return true;\n    }\n\n    return false;\n  });\n\n  return resultKey;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/iteratee.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = iteratee;\nexports.iterateeValue = iterateeValue;\n\nvar _identity = require('./identity');\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction matcher(object) {\n  return function (compareObject) {\n    if (compareObject === object) return true;\n\n    return Object.keys(object).every(function (key) {\n      return object[key] === compareObject[key];\n    });\n  };\n}\n\nfunction propChecker(prop) {\n  return function (object) {\n    return object && !!object[prop];\n  };\n}\n\nfunction iteratee(value) {\n  if (typeof value === 'function') {\n    return value;\n  }\n\n  if (value === null) {\n    return _identity2.default;\n  }\n\n  if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n    return matcher(value);\n  }\n\n  return propChecker(value);\n}\n\nfunction iterateeValue(data, value) {\n  if (typeof value === 'function') {\n    return value(data);\n  }\n\n  if (!Array.isArray(value) && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' && typeof value !== 'string') {\n    return !!value;\n  }\n\n  return iteratee(value)(data);\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/identity.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = identity;\nfunction identity(a) {\n  return a;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/constants/null-action.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar NULL_ACTION = { type: null };\n\nexports.default = NULL_ACTION;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/get-validity.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getValidity;\n\nvar _getValue = require('./get-value');\n\nvar _getValue2 = _interopRequireDefault(_getValue);\n\nvar _mapValues = require('./map-values');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getValidity(validators, value) {\n  var modelValue = (0, _getValue2.default)(value);\n\n  if (typeof validators === 'function') {\n    return validators(modelValue);\n  }\n\n  return (0, _mapValues2.default)(validators, function (validator) {\n    return getValidity(validator, modelValue);\n  });\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/get-value.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getValue;\nexports.getCheckboxValue = getCheckboxValue;\n\nvar _isMulti = require('./is-multi');\n\nvar _isMulti2 = _interopRequireDefault(_isMulti);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction isEvent(event) {\n  return !!(event && event.stopPropagation && event.preventDefault);\n}\n\nfunction getEventValue(event) {\n  var target = event.target;\n\n\n  if (!target) {\n    if (!event.nativeEvent) {\n      return undefined;\n    }\n\n    return event.nativeEvent.text;\n  }\n\n  if (target.type === 'file') {\n    return [].concat(_toConsumableArray(target.files)) || target.dataTransfer && [].concat(_toConsumableArray(target.dataTransfer.files));\n  }\n\n  if (target.multiple) {\n    return [].concat(_toConsumableArray(target.selectedOptions)).map(function (option) {\n      return option.value;\n    });\n  }\n\n  return target.value;\n}\n\nfunction getValue(value) {\n  return isEvent(value) ? getEventValue(value) : value;\n}\n\nfunction getCheckboxValue(_, props) {\n  var controlProps = props.controlProps;\n\n\n  if ((0, _isMulti2.default)(props.model)) {\n    return controlProps.value;\n  }\n\n  return !props.modelValue;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/is-multi.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMulti;\n\nvar _endsWith = require('./ends-with');\n\nvar _endsWith2 = _interopRequireDefault(_endsWith);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isMulti(model) {\n  return (0, _endsWith2.default)(model, '[]');\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/is-validity-valid.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValidityValid;\n\nvar _isPlainObject = require('./is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isValidityValid(validity) {\n  if ((0, _isPlainObject2.default)(validity)) {\n    return Object.keys(validity).every(function (key) {\n      return isValidityValid(validity[key]);\n    });\n  }\n\n  return !!validity;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/is-validity-invalid.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValidityInvalid;\n\nvar _isPlainObject = require('./is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isValidityInvalid(errors) {\n  if (Array.isArray(errors)) {\n    return errors.some(isValidityInvalid);\n  }\n\n  if ((0, _isPlainObject2.default)(errors)) {\n    return Object.keys(errors).some(function (key) {\n      return isValidityInvalid(errors[key]);\n    });\n  }\n\n  return !!errors;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/invert-validity.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = invertValidity;\n\nvar _isPlainObject = require('./is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _mapValues = require('./map-values');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction invertValidity(validity) {\n  if ((0, _isPlainObject2.default)(validity)) {\n    return (0, _mapValues2.default)(validity, invertValidity);\n  }\n\n  return !validity;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/get-form.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clearGetFormCache = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.getFormStateKey = getFormStateKey;\n\nvar _get = require('../utils/get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nvar _isPlainObject = require('../utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _pathStartsWith = require('../utils/path-starts-with');\n\nvar _pathStartsWith2 = _interopRequireDefault(_pathStartsWith);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultStrategy = {\n  get: _get2.default,\n  keys: function keys(state) {\n    return Object.keys(state);\n  },\n  isObject: function isObject(state) {\n    return (0, _isPlainObject2.default)(state);\n  }\n};\n\nfunction joinPaths() {\n  for (var _len = arguments.length, paths = Array(_len), _key = 0; _key < _len; _key++) {\n    paths[_key] = arguments[_key];\n  }\n\n  return paths.filter(function (path) {\n    return !!path && path.length;\n  }).join('.');\n}\n\nfunction getFormStateKey(state, model) {\n  var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultStrategy;\n  var currentPath = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n  var deepCandidateKeys = [];\n  var result = null;\n\n  s.keys(state).some(function (key) {\n    var subState = s.get(state, key);\n\n    if (subState && s.get(subState, '$form')) {\n      var subStateModel = s.get(subState, '$form.model');\n\n      if ((0, _pathStartsWith2.default)(model, subStateModel) || subStateModel === '') {\n        var _ret = function () {\n          var localPath = (0, _pathStartsWith.pathDifference)(model, subStateModel);\n\n          var resultPath = [currentPath, key];\n          var currentState = subState;\n\n          localPath.every(function (segment) {\n            if (s.get(currentState, segment) && s.get(currentState, segment + '.$form')) {\n              currentState = s.get(currentState, segment);\n              resultPath.push(segment);\n\n              return true;\n            }\n\n            return false;\n          });\n\n          result = joinPaths.apply(undefined, resultPath);\n\n          return {\n            v: true\n          };\n        }();\n\n        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n      }\n\n      return false;\n    }\n\n    if (s.isObject(subState)) {\n      deepCandidateKeys.push(key);\n    }\n\n    return false;\n  });\n\n  if (result) return result;\n\n  deepCandidateKeys.some(function (key) {\n    result = getFormStateKey(s.get(state, key), model, s, joinPaths(currentPath, key));\n\n    return !!result;\n  });\n\n  if (result) return result;\n\n  return null;\n}\n\nvar formStateKeyCache = {};\n\nvar clearGetFormCache = exports.clearGetFormCache = function clearGetFormCache() {\n  return formStateKeyCache = {};\n}; // eslint-disable-line no-return-assign\n\nvar getFormStateKeyCached = function () {\n  return function (state, modelString) {\n    var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultStrategy;\n\n    if (formStateKeyCache[modelString]) return formStateKeyCache[modelString];\n\n    var result = getFormStateKey(state, modelString, s);\n\n    formStateKeyCache[modelString] = result; // eslint-disable-line no-return-assign\n\n    return result;\n  };\n}();\n\nfunction getForm(state, modelString) {\n  var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultStrategy;\n\n  var formStateKey = getFormStateKeyCached(state, modelString, s);\n\n  if (!formStateKey) {\n    return null;\n  }\n\n  var form = s.get(state, formStateKey);\n\n  return form;\n}\n\nexports.default = getForm;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/path-starts-with.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pathStartsWith;\nexports.pathDifference = pathDifference;\n\nvar _lodash = require('lodash.topath');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction pathStartsWith(pathString, subPathString) {\n  if (pathString === subPathString) return true;\n\n  var path = (0, _lodash2.default)(pathString);\n  var subPath = (0, _lodash2.default)(subPathString);\n\n  var startsWithSubPath = subPath.every(function (segment, index) {\n    return path[index] === segment;\n  });\n\n  return startsWithSubPath;\n}\n\nfunction pathDifference(pathString, subPathString) {\n  if (pathString === subPathString) return [];\n\n  var path = (0, _lodash2.default)(pathString);\n  var subPath = (0, _lodash2.default)(subPathString);\n\n  var difference = path.reduce(function (acc, segment, index) {\n    if (segment === subPath[index]) return acc;\n\n    acc.push(segment);\n\n    return acc;\n  }, []);\n\n  return difference;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/get-field-from-state.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getFieldFromState;\n\nvar _get = require('./get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nvar _toPath = require('./to-path');\n\nvar _toPath2 = _interopRequireDefault(_toPath);\n\nvar _getForm = require('./get-form');\n\nvar _getForm2 = _interopRequireDefault(_getForm);\n\nvar _isPlainObject = require('./is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultStrategy = {\n  getForm: _getForm2.default\n};\n\nfunction getFieldFromState(state, modelString) {\n  var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultStrategy;\n\n  var form = state && '$form' in state ? state : s.getForm(state, modelString);\n\n  if (!form || !form.$form) return null;\n\n  if (!modelString.length) return form;\n\n  (0, _invariant2.default)(form, 'Could not find form for \"%s\" in the store.', modelString);\n\n  var formPath = (0, _toPath2.default)(form.$form.model);\n  var fieldPath = (0, _toPath2.default)(modelString).slice(formPath.length);\n  var field = (0, _get2.default)(form, fieldPath);\n\n  if (!field) return null;\n  if ((0, _isPlainObject2.default)(field) && '$form' in field) return field.$form;\n\n  return field;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/to-path.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toPath;\n\nvar _lodash = require('lodash.topath');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _endsWith = require('./ends-with');\n\nvar _endsWith2 = _interopRequireDefault(_endsWith);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toPath(value) {\n  var path = value;\n\n  if ((0, _endsWith2.default)(path, '.')) {\n    path = path.slice(0, -1);\n  } else if ((0, _endsWith2.default)(path, '[]')) {\n    path = path.slice(0, -2);\n  }\n\n  return (0, _lodash2.default)(path);\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/actions/model-actions.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.createModelActions = createModelActions;\n\nvar _get2 = require('../utils/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _identity = require('../utils/identity');\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nvar _icepick = require('icepick');\n\nvar _icepick2 = _interopRequireDefault(_icepick);\n\nvar _getValue = require('../utils/get-value');\n\nvar _getValue2 = _interopRequireDefault(_getValue);\n\nvar _isMulti = require('../utils/is-multi');\n\nvar _isMulti2 = _interopRequireDefault(_isMulti);\n\nvar _actionTypes = require('../action-types');\n\nvar _actionTypes2 = _interopRequireDefault(_actionTypes);\n\nvar _mapValues = require('../utils/map-values');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nvar _track = require('../utils/track');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar defaultStrategies = {\n  get: _get3.default,\n  getValue: _getValue2.default,\n  splice: _icepick2.default.splice,\n  merge: _icepick2.default.merge,\n  remove: _icepick2.default.dissoc,\n  push: _icepick2.default.push,\n  length: function length(value) {\n    return value.length;\n  },\n  object: {},\n  array: []\n};\n\nfunction optionsFromArgs(args, index) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof index === 'undefined') return undefined;\n\n  return _extends({}, options, args[index]);\n}\n\nfunction createModelActions() {\n  var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultStrategies;\n\n  var change = function change(model, value) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // option defaults\n    var changeOptions = _extends({\n      silent: false,\n      multi: (0, _isMulti2.default)(model),\n      external: true\n    }, options);\n\n    if (typeof value === 'function') {\n      return function (dispatch, getState) {\n        var modelValue = s.get(getState(), model);\n\n        return dispatch(change(model, value(modelValue), options));\n      };\n    }\n\n    return _extends({\n      type: _actionTypes2.default.CHANGE,\n      model: model,\n      value: s.getValue(value)\n    }, changeOptions);\n  };\n\n  function createModifierAction(modifier, defaultValue, optionsIndex, getOptions) {\n    var actionCreator = function actionCreator(model) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return function (dispatch, getState) {\n        var modelValue = s.get(getState(), model, defaultValue);\n        var value = modifier.apply(undefined, [modelValue].concat(args));\n\n        var options = getOptions ? getOptions.apply(undefined, [value].concat(args)) : undefined;\n\n        dispatch(change(model, value, optionsFromArgs(args, optionsIndex - 1, options)));\n      };\n    };\n\n    return actionCreator;\n  }\n\n  var xor = createModifierAction(function (value, item) {\n    var iteratee = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (_item) {\n      return _item === item;\n    };\n\n    var valueWithoutItem = value.filter(function (_item) {\n      return !iteratee(_item);\n    });\n\n    return s.length(value) === s.length(valueWithoutItem) ? [].concat(_toConsumableArray(value), [item]) : valueWithoutItem;\n  }, s.array, 3);\n\n  var push = createModifierAction(function (value, item) {\n    return s.push(value || s.array, item);\n  }, s.array, 2);\n\n  var toggle = createModifierAction(function (value) {\n    return !value;\n  }, undefined, 1);\n\n  var checkWithValue = function checkWithValue(model, value) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var currentValue = options.currentValue;\n\n\n    if ((0, _isMulti2.default)(model)) {\n      var valueWithItem = currentValue || s.array;\n      var valueWithoutItem = (valueWithItem || s.array).filter(function (item) {\n        return item !== value;\n      });\n      var multiValue = s.length(valueWithoutItem) === s.length(valueWithItem) ? s.push(valueWithItem, value) : valueWithoutItem;\n\n      return change(model, multiValue);\n    }\n\n    return change(model, !currentValue);\n  };\n\n  var check = function check(model, value) {\n    return function (dispatch, getState) {\n      var modelValue = s.get(getState(), model);\n\n      var action = checkWithValue(model, value, {\n        currentValue: modelValue\n      });\n\n      dispatch(action);\n    };\n  };\n\n  var filter = createModifierAction(function (value, iteratee) {\n    return value.filter(iteratee);\n  }, s.array, 2);\n\n  var reset = function reset(model) {\n    return {\n      type: _actionTypes2.default.RESET,\n      model: model\n    };\n  };\n\n  var map = createModifierAction(function (value) {\n    var iteratee = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _identity2.default;\n    return value.map(iteratee);\n  }, s.array, 2);\n\n  var remove = createModifierAction(function (value, index) {\n    return s.splice(value, index, 1);\n  }, s.array, 2, function (_, index) {\n    return { removeKeys: [index] };\n  });\n\n  var move = createModifierAction(function (value, indexFrom, indexTo) {\n    if (indexFrom >= s.length(value) || indexTo >= s.length(value)) {\n      throw new Error('Error moving array item: invalid bounds ' + indexFrom + ', ' + indexTo);\n    }\n\n    var item = s.get(value, indexFrom);\n    var removed = s.splice(value, indexFrom, 1);\n    var inserted = s.splice(removed, indexTo, 0, item);\n\n    return inserted;\n  }, s.array, 3);\n\n  var merge = createModifierAction(s.merge, {}, 2);\n\n  var omit = createModifierAction(function (value) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    var propsArray = typeof props === 'string' ? [props] : props;\n\n    var newValue = propsArray.reduce(function (acc, prop) {\n      return s.remove(acc, prop);\n    }, value);\n\n    return newValue;\n  }, {}, 2, function (_, props) {\n    return { removeKeys: props };\n  });\n\n  var load = function load(model, values, options) {\n    return change(model, values, _extends({\n      silent: true,\n      load: true\n    }, options));\n  };\n\n  return (0, _mapValues2.default)({\n    change: change,\n    xor: xor,\n    push: push,\n    toggle: toggle,\n    check: check,\n    checkWithValue: checkWithValue,\n    filter: filter,\n    reset: reset,\n    map: map,\n    remove: remove,\n    move: move,\n    merge: merge,\n    omit: omit,\n    load: load\n  }, _track.trackable);\n}\n\nexports.default = createModelActions();","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/components/field-component.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFieldClass = exports.controlPropsMap = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _get2 = require('../utils/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _identity = require('../utils/identity');\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nvar _omit = require('../utils/omit');\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nvar _isPlainObject = require('../utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _pick = require('../utils/pick');\n\nvar _pick2 = _interopRequireDefault(_pick);\n\nvar _reactRedux = require('react-redux');\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _actions = require('../actions');\n\nvar _actions2 = _interopRequireDefault(_actions);\n\nvar _controlComponent = require('./control-component');\n\nvar _controlComponent2 = _interopRequireDefault(_controlComponent);\n\nvar _controlPropsMap2 = require('../constants/control-props-map');\n\nvar _controlPropsMap3 = _interopRequireDefault(_controlPropsMap2);\n\nvar _deepCompareChildren = require('../utils/deep-compare-children');\n\nvar _deepCompareChildren2 = _interopRequireDefault(_deepCompareChildren);\n\nvar _shallowCompareWithoutChildren = require('../utils/shallow-compare-without-children');\n\nvar _shallowCompareWithoutChildren2 = _interopRequireDefault(_shallowCompareWithoutChildren);\n\nvar _getModel = require('../utils/get-model');\n\nvar _getModel2 = _interopRequireDefault(_getModel);\n\nvar _getFieldFromState = require('../utils/get-field-from-state');\n\nvar _getFieldFromState2 = _interopRequireDefault(_getFieldFromState);\n\nvar _resolveModel = require('../utils/resolve-model');\n\nvar _resolveModel2 = _interopRequireDefault(_resolveModel);\n\nvar _getValue = require('../utils/get-value');\n\nvar _initialFieldState = require('../constants/initial-field-state');\n\nvar _initialFieldState2 = _interopRequireDefault(_initialFieldState);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar fieldPropTypes = {\n  model: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,\n  component: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),\n  parser: _propTypes2.default.func,\n  updateOn: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.string), _propTypes2.default.string]),\n  changeAction: _propTypes2.default.func,\n  validators: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.object]),\n  asyncValidators: _propTypes2.default.object,\n  validateOn: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.string), _propTypes2.default.string]),\n  asyncValidateOn: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.string), _propTypes2.default.string]),\n  errors: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.object]),\n  mapProps: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.object]),\n  componentMap: _propTypes2.default.object,\n  dynamic: _propTypes2.default.bool,\n  dispatch: _propTypes2.default.func,\n  getRef: _propTypes2.default.func,\n\n  // Calculated props\n  fieldValue: _propTypes2.default.object,\n  store: _propTypes2.default.shape({\n    subscribe: _propTypes2.default.func,\n    dispatch: _propTypes2.default.func,\n    getState: _propTypes2.default.func\n  })\n};\n\nfunction getControlType(control, props, options) {\n  var _controlPropsMap = options.controlPropsMap;\n\n\n  var controlDisplayNames = Object.keys(_controlPropsMap).filter(function (controlKey) {\n    var propsMap = _controlPropsMap[controlKey];\n\n    if ((0, _isPlainObject2.default)(propsMap) && propsMap.component) {\n      return control.type === propsMap.component;\n    }\n\n    return false;\n  });\n\n  if (controlDisplayNames.length) return controlDisplayNames[0];\n\n  try {\n    var controlDisplayName = control.constructor.displayName || control.type.displayName || control.type.name || control.type;\n\n    if (controlDisplayName === 'input') {\n      controlDisplayName = _controlPropsMap[control.props.type] ? control.props.type : 'text';\n    }\n\n    return _controlPropsMap[controlDisplayName] ? controlDisplayName : null;\n  } catch (error) {\n    return undefined;\n  }\n}\n\nvar defaultStrategy = {\n  Control: _controlComponent2.default,\n  controlPropTypes: fieldPropTypes,\n  getFieldFromState: _getFieldFromState2.default,\n  actions: _actions2.default\n};\n\nfunction createFieldClass() {\n  var customControlPropsMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultStrategy;\n\n  // Use the fieldPropTypes if no controlProptypes have been defined to\n  // maintain backwards compatibiltiy.\n  var controlPropTypes = s.controlPropTypes || fieldPropTypes;\n\n  function mapStateToProps(state, props) {\n    var model = props.model;\n\n\n    var modelString = (0, _getModel2.default)(model, state);\n    var fieldValue = s.getFieldFromState(state, modelString) || _initialFieldState2.default;\n\n    return {\n      model: modelString,\n      fieldValue: fieldValue\n    };\n  }\n\n  var options = {\n    controlPropsMap: _extends({}, _controlPropsMap3.default, customControlPropsMap)\n  };\n\n  // TODO: refactor\n  var defaultControlPropsMap = {\n    checkbox: {\n      changeAction: s.actions.checkWithValue,\n      getValue: _getValue.getCheckboxValue,\n      isToggle: true\n    },\n    radio: {\n      isToggle: true\n    }\n  };\n\n  var Field = function (_Component) {\n    _inherits(Field, _Component);\n\n    function Field() {\n      _classCallCheck(this, Field);\n\n      return _possibleConstructorReturn(this, (Field.__proto__ || Object.getPrototypeOf(Field)).apply(this, arguments));\n    }\n\n    _createClass(Field, [{\n      key: 'shouldComponentUpdate',\n      value: function shouldComponentUpdate(nextProps) {\n        var dynamic = this.props.dynamic;\n\n\n        if (dynamic) {\n          return (0, _deepCompareChildren2.default)(this, nextProps);\n        }\n\n        return (0, _shallowCompareWithoutChildren2.default)(this, nextProps);\n      }\n    }, {\n      key: 'createControlComponent',\n      value: function createControlComponent(control) {\n        var props = this.props;\n\n\n        if (!control || !control.props || control instanceof _controlComponent2.default) {\n          return control;\n        }\n\n        var controlType = getControlType(control, props, options);\n        var _props$mapProps = props.mapProps,\n            mapProps = _props$mapProps === undefined ? options.controlPropsMap[controlType] : _props$mapProps;\n\n\n        var controlProps = (0, _pick2.default)(props, Object.keys(controlPropTypes));\n\n        if (!mapProps) {\n          return _react2.default.cloneElement(control, null, this.mapChildrenToControl(control.props.children));\n        }\n\n        return _react2.default.createElement(s.Control, _extends({}, controlProps, {\n          control: control,\n          controlProps: control.props,\n          component: control.type,\n          mapProps: mapProps\n        }, defaultControlPropsMap[controlType] || {}));\n      }\n    }, {\n      key: 'mapChildrenToControl',\n      value: function mapChildrenToControl(children) {\n        var _this2 = this;\n\n        if (_react2.default.Children.count(children) > 1) {\n          return _react2.default.Children.map(children, function (child) {\n            return _this2.createControlComponent(child);\n          });\n        }\n\n        return this.createControlComponent(children);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _props = this.props,\n            component = _props.component,\n            children = _props.children,\n            fieldValue = _props.fieldValue;\n\n\n        var allowedProps = (0, _omit2.default)(this.props, Object.keys(controlPropTypes));\n        var renderableChildren = typeof children === 'function' ? children(fieldValue) : children;\n\n        if (!component) {\n          (0, _invariant2.default)(_react2.default.Children.count(renderableChildren) === 1, 'Empty wrapper components for <Field> are only possible' + 'when there is a single child. Please check the children' + ('passed into <Field model=\"' + this.props.model + '\">.'));\n\n          return this.createControlComponent(renderableChildren);\n        }\n\n        return _react2.default.createElement(component, allowedProps, this.mapChildrenToControl(renderableChildren));\n      }\n    }]);\n\n    return Field;\n  }(_react.Component);\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? Field.propTypes = fieldPropTypes : void 0;\n  }\n\n  Field.defaultProps = {\n    updateOn: 'change',\n    asyncValidateOn: 'blur',\n    parser: _identity2.default,\n    changeAction: _actions2.default.change,\n    dynamic: true,\n    component: 'div'\n  };\n\n  return (0, _resolveModel2.default)((0, _reactRedux.connect)(mapStateToProps)(Field));\n}\n\nexports.controlPropsMap = _controlPropsMap3.default;\nexports.createFieldClass = createFieldClass;\nexports.default = createFieldClass(_controlPropsMap3.default);","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/omit.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = omit;\nfunction omit(object, props) {\n  if (object == null) {\n    return {};\n  }\n  var newObject = _extends({}, object);\n\n  if (typeof props === 'string') {\n    delete newObject[props];\n  } else {\n    props.forEach(function (prop) {\n      delete newObject[prop];\n    });\n  }\n\n  return newObject;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/pick.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pick;\nfunction pick(object, props) {\n  var result = {};\n\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    result[prop] = object[prop];\n  }\n\n  return result;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/components/control-component.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createControlClass = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = require('react-redux');\n\nvar _redux = require('redux');\n\nvar _identity = require('../utils/identity');\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nvar _shallowEqual = require('../utils/shallow-equal');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nvar _get2 = require('../utils/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _merge = require('../utils/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _mapValues = require('../utils/map-values');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nvar _isPlainObject = require('../utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _icepick = require('icepick');\n\nvar _icepick2 = _interopRequireDefault(_icepick);\n\nvar _omit = require('../utils/omit');\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nvar _actionTypes = require('../action-types');\n\nvar _actionTypes2 = _interopRequireDefault(_actionTypes);\n\nvar _debounce = require('../utils/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _getValue2 = require('../utils/get-value');\n\nvar _getValue3 = _interopRequireDefault(_getValue2);\n\nvar _getValidity = require('../utils/get-validity');\n\nvar _getValidity2 = _interopRequireDefault(_getValidity);\n\nvar _invertValidity = require('../utils/invert-validity');\n\nvar _invertValidity2 = _interopRequireDefault(_invertValidity);\n\nvar _getFieldFromState = require('../utils/get-field-from-state');\n\nvar _getFieldFromState2 = _interopRequireDefault(_getFieldFromState);\n\nvar _getModel = require('../utils/get-model');\n\nvar _getModel2 = _interopRequireDefault(_getModel);\n\nvar _persistEventWithCallback = require('../utils/persist-event-with-callback');\n\nvar _persistEventWithCallback2 = _interopRequireDefault(_persistEventWithCallback);\n\nvar _actions = require('../actions');\n\nvar _actions2 = _interopRequireDefault(_actions);\n\nvar _controlPropsMap = require('../constants/control-props-map');\n\nvar _controlPropsMap2 = _interopRequireDefault(_controlPropsMap);\n\nvar _validityKeys = require('../constants/validity-keys');\n\nvar _validityKeys2 = _interopRequireDefault(_validityKeys);\n\nvar _batchActions = require('../actions/batch-actions');\n\nvar _resolveModel = require('../utils/resolve-model');\n\nvar _resolveModel2 = _interopRequireDefault(_resolveModel);\n\nvar _isNative = require('../utils/is-native');\n\nvar _isNative2 = _interopRequireDefault(_isNative);\n\nvar _initialFieldState = require('../constants/initial-field-state');\n\nvar _initialFieldState2 = _interopRequireDefault(_initialFieldState);\n\nvar _containsEvent = require('../utils/contains-event');\n\nvar _containsEvent2 = _interopRequireDefault(_containsEvent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar findDOMNode = !_isNative2.default ? require('react-dom').findDOMNode : null;\n\nvar disallowedProps = ['changeAction', 'getFieldFromState', 'store'];\n\nfunction mergeOrSetErrors(model, errors, options) {\n  return _actions2.default.setErrors(model, errors, _extends({\n    merge: (0, _isPlainObject2.default)(errors)\n  }, options));\n}\n\nvar propTypes = {\n  model: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,\n  modelValue: _propTypes2.default.any,\n  viewValue: _propTypes2.default.any,\n  defaultValue: _propTypes2.default.any,\n  control: _propTypes2.default.any,\n  onLoad: _propTypes2.default.func,\n  onSubmit: _propTypes2.default.func,\n  fieldValue: _propTypes2.default.object,\n  mapProps: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.object]),\n  changeAction: _propTypes2.default.func,\n  updateOn: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.string), _propTypes2.default.string]),\n  validateOn: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.string), _propTypes2.default.string]),\n  validators: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.object]),\n  asyncValidateOn: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.string), _propTypes2.default.string]),\n  asyncValidators: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.object]),\n  errors: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.object]),\n  controlProps: _propTypes2.default.object,\n  component: _propTypes2.default.any,\n  dispatch: _propTypes2.default.func,\n  parser: _propTypes2.default.func,\n  ignore: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.string), _propTypes2.default.string]),\n  dynamic: _propTypes2.default.bool,\n  store: _propTypes2.default.shape({\n    subscribe: _propTypes2.default.func,\n    dispatch: _propTypes2.default.func,\n    getState: _propTypes2.default.func\n  }),\n  getRef: _propTypes2.default.func,\n  withField: _propTypes2.default.bool,\n  debounce: _propTypes2.default.number,\n  persist: _propTypes2.default.bool,\n  getValue: _propTypes2.default.func,\n  isToggle: _propTypes2.default.bool\n};\n\nvar defaultStrategy = {\n  get: _get3.default,\n  getFieldFromState: _getFieldFromState2.default,\n  actions: _actions2.default\n};\n\nfunction createControlClass() {\n  var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultStrategy;\n\n  var emptyControlProps = {};\n  var emptyMapProps = {};\n\n  var Control = function (_Component) {\n    _inherits(Control, _Component);\n\n    function Control(props) {\n      _classCallCheck(this, Control);\n\n      var _this = _possibleConstructorReturn(this, (Control.__proto__ || Object.getPrototypeOf(Control)).call(this, props));\n\n      _this.getChangeAction = _this.getChangeAction.bind(_this);\n      _this.getValidateAction = _this.getValidateAction.bind(_this);\n\n      _this.handleKeyPress = _this.handleKeyPress.bind(_this);\n      _this.createEventHandler = _this.createEventHandler.bind(_this);\n      _this.handleFocus = _this.createEventHandler('focus').bind(_this);\n      _this.handleBlur = _this.createEventHandler('blur').bind(_this);\n      _this.handleUpdate = _this.createEventHandler('change').bind(_this);\n      _this.handleChange = _this.handleChange.bind(_this);\n      _this.handleLoad = _this.handleLoad.bind(_this);\n      _this.getMappedProps = _this.getMappedProps.bind(_this);\n      _this.attachNode = _this.attachNode.bind(_this);\n\n      if (props.debounce) {\n        _this.handleUpdate = (0, _debounce2.default)(_this.handleUpdate, props.debounce);\n      }\n\n      _this.willValidate = false;\n\n      _this.state = {\n        viewValue: props.modelValue\n      };\n      return _this;\n    }\n\n    _createClass(Control, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        this.attachNode();\n        this.handleLoad();\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(_ref) {\n        var modelValue = _ref.modelValue;\n\n        if (modelValue !== this.props.modelValue) {\n          this.setViewValue(modelValue);\n        }\n      }\n    }, {\n      key: 'shouldComponentUpdate',\n      value: function shouldComponentUpdate(nextProps, nextState) {\n        return !(0, _shallowEqual2.default)(this.props, nextProps, {\n          deepKeys: ['controlProps'],\n          omitKeys: ['mapProps']\n        }) || !(0, _shallowEqual2.default)(this.state.viewValue, nextState.viewValue);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        this.handleIntents();\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        var _props = this.props,\n            model = _props.model,\n            fieldValue = _props.fieldValue,\n            dispatch = _props.dispatch,\n            _props$validators = _props.validators,\n            validators = _props$validators === undefined ? {} : _props$validators,\n            _props$errors = _props.errors,\n            errors = _props$errors === undefined ? {} : _props$errors,\n            persist = _props.persist;\n\n\n        if (!persist && fieldValue && !fieldValue.valid) {\n          var keys = Object.keys(validators).concat(Object.keys(errors), this.willValidate ? _validityKeys2.default : []);\n\n          dispatch(_actions2.default.resetValidity(model, keys));\n        }\n      }\n    }, {\n      key: 'getMappedProps',\n      value: function getMappedProps() {\n        var props = this.props;\n        var mapProps = props.mapProps;\n        var viewValue = this.state.viewValue;\n\n        var originalProps = _extends({}, props, props.controlProps, {\n          onFocus: this.handleFocus,\n          onBlur: this.handleBlur,\n          onChange: this.handleChange,\n          onKeyPress: this.handleKeyPress,\n          viewValue: viewValue\n        });\n\n        if ((0, _isPlainObject2.default)(mapProps)) {\n          return (0, _mapValues2.default)(mapProps, function (value, key) {\n            if (typeof value === 'function' && key !== 'component') {\n              return value(originalProps);\n            }\n\n            return value;\n          });\n        } else if (typeof mapProps === 'function') {\n          return mapProps(originalProps);\n        }\n\n        return emptyMapProps;\n      }\n    }, {\n      key: 'getChangeAction',\n      value: function getChangeAction(event) {\n        return this.props.changeAction(this.props.model, this.getValue(event), {\n          currentValue: this.props.modelValue,\n          external: false\n        });\n      }\n    }, {\n      key: 'getValidateAction',\n      value: function getValidateAction(value, eventName) {\n        var _props2 = this.props,\n            validators = _props2.validators,\n            errors = _props2.errors,\n            model = _props2.model,\n            modelValue = _props2.modelValue,\n            updateOn = _props2.updateOn,\n            fieldValue = _props2.fieldValue;\n\n\n        if (!validators && !errors && !this.willValidate) return false;\n\n        var nodeErrors = this.getNodeErrors();\n\n        // If it is not a change event, use the model value.\n        var valueToValidate = (0, _containsEvent2.default)(updateOn, eventName) ? value : modelValue;\n\n        if (validators || errors) {\n          var fieldValidity = (0, _getValidity2.default)(validators, valueToValidate);\n          var fieldErrors = (0, _merge2.default)((0, _getValidity2.default)(errors, valueToValidate), nodeErrors);\n\n          var mergedErrors = validators ? (0, _merge2.default)((0, _invertValidity2.default)(fieldValidity), fieldErrors) : fieldErrors;\n\n          if (!fieldValue || !(0, _shallowEqual2.default)(mergedErrors, fieldValue.errors)) {\n            return mergeOrSetErrors(model, mergedErrors);\n          }\n        } else if (nodeErrors && Object.keys(nodeErrors).length) {\n          return mergeOrSetErrors(model, nodeErrors);\n        }\n\n        return false;\n      }\n    }, {\n      key: 'getAsyncValidateAction',\n      value: function getAsyncValidateAction(value, eventName) {\n        var _props3 = this.props,\n            asyncValidators = _props3.asyncValidators,\n            fieldValue = _props3.fieldValue,\n            model = _props3.model,\n            modelValue = _props3.modelValue,\n            updateOn = _props3.updateOn,\n            dispatch = _props3.dispatch,\n            getValue = _props3.getValue;\n\n        // If there are no async validators,\n        // do not run async validation\n\n        if (!asyncValidators) return false;\n\n        // If it is not a change event, use the model value.\n        var valueToValidate = (0, _containsEvent2.default)(updateOn, eventName) ? value : modelValue;\n\n        // If any sync validity is invalid,\n        // do not run async validation\n        var asyncValidatorKeys = Object.keys(asyncValidators);\n        var syncValid = Object.keys(fieldValue.validity).every(function (key) {\n          // If validity is based on async validator, skip\n          if (!!~asyncValidatorKeys.indexOf(key)) return true;\n\n          return fieldValue.validity[key];\n        });\n\n        if (!syncValid) return false;\n\n        dispatch(_actions2.default.setValidating(model, true));\n\n        (0, _mapValues2.default)(asyncValidators, function (validator, key) {\n          var outerDone = function outerDone(valid) {\n            var validity = _icepick2.default.merge(fieldValue.validity, _defineProperty({}, key, valid));\n\n            dispatch(_actions2.default.setValidity(model, validity));\n          };\n\n          validator(getValue(valueToValidate), outerDone);\n        });\n\n        return valueToValidate;\n      }\n    }, {\n      key: 'getNodeErrors',\n      value: function getNodeErrors() {\n        var node = this.node,\n            fieldValue = this.props.fieldValue;\n\n\n        if (!node || node && !node.willValidate) {\n          this.willValidate = false;\n          return null;\n        }\n\n        this.willValidate = true;\n\n        var nodeErrors = {};\n\n        _validityKeys2.default.forEach(function (key) {\n          var errorValidity = node.validity[key];\n\n          // If the key is invalid or they key was\n          // previously invalid and is now valid,\n          // set its validity\n          if (errorValidity || fieldValue && fieldValue.errors[key]) {\n            nodeErrors[key] = errorValidity;\n          }\n        });\n\n        return nodeErrors;\n      }\n    }, {\n      key: 'setViewValue',\n      value: function setViewValue(viewValue) {\n        if (!this.props.isToggle) {\n          this.setState({ viewValue: this.parse(viewValue) });\n        }\n      }\n    }, {\n      key: 'getValue',\n      value: function getValue(event) {\n        return this.props.getValue(event, this.props);\n      }\n    }, {\n      key: 'handleIntents',\n      value: function handleIntents() {\n        var _this2 = this;\n\n        var _props4 = this.props,\n            model = _props4.model,\n            modelValue = _props4.modelValue,\n            fieldValue = _props4.fieldValue,\n            intents = _props4.fieldValue.intents,\n            controlProps = _props4.controlProps,\n            dispatch = _props4.dispatch,\n            updateOn = _props4.updateOn,\n            _props4$validateOn = _props4.validateOn,\n            validateOn = _props4$validateOn === undefined ? updateOn : _props4$validateOn;\n\n\n        if (!intents.length) return;\n\n        intents.forEach(function (intent) {\n          switch (intent.type) {\n            case _actionTypes2.default.FOCUS:\n              {\n                if (_isNative2.default) return;\n\n                var focused = fieldValue.focus;\n\n                if (focused && _this2.node.focus && (!_this2.props.isToggle || typeof intent.value === 'undefined' || intent.value === controlProps.value)) {\n                  _this2.node.focus();\n\n                  dispatch(_actions2.default.clearIntents(model, intent));\n                }\n\n                return;\n              }\n            case 'validate':\n              if ((0, _containsEvent2.default)(validateOn, 'change')) {\n                _this2.validate({ clearIntents: intent });\n              }\n              return;\n\n            case 'load':\n              if (!(0, _shallowEqual2.default)(modelValue, fieldValue.value)) {\n                dispatch(_actions2.default.load(model, fieldValue.value, { clearIntents: intent }));\n              }\n              return;\n\n            default:\n              return;\n          }\n        });\n      }\n    }, {\n      key: 'parse',\n      value: function parse(value) {\n        return this.props.parser ? this.props.parser(value) : value;\n      }\n    }, {\n      key: 'handleChange',\n      value: function handleChange(event) {\n        if (event && event.persist) event.persist();\n\n        this.setViewValue(this.getValue(event));\n        this.handleUpdate(event);\n      }\n    }, {\n      key: 'handleKeyPress',\n      value: function handleKeyPress(event) {\n        var _props5 = this.props,\n            onKeyPress = _props5.controlProps.onKeyPress,\n            dispatch = _props5.dispatch,\n            getValue = _props5.getValue;\n\n        // Get the value from the event\n        // in case updateOn=\"blur\" (or something other than \"change\")\n\n        var parsedValue = this.parse(getValue(event));\n\n        if (event.key === 'Enter') {\n          dispatch(this.getChangeAction(parsedValue));\n        }\n\n        if (onKeyPress) onKeyPress(event);\n      }\n    }, {\n      key: 'handleLoad',\n      value: function handleLoad() {\n        var _props6 = this.props,\n            model = _props6.model,\n            modelValue = _props6.modelValue,\n            fieldValue = _props6.fieldValue,\n            controlProps = _props6.controlProps,\n            onLoad = _props6.onLoad,\n            dispatch = _props6.dispatch,\n            changeAction = _props6.changeAction,\n            parser = _props6.parser;\n\n        var defaultValue = undefined;\n\n        if (controlProps.hasOwnProperty('defaultValue')) {\n          defaultValue = controlProps.defaultValue;\n        } else if (controlProps.hasOwnProperty('defaultChecked')) {\n          defaultValue = controlProps.defaultChecked;\n        } else if (this.props.hasOwnProperty('defaultValue')) {\n          defaultValue = this.props.defaultValue;\n        }\n\n        var loadActions = [this.getValidateAction(defaultValue)];\n\n        if (typeof defaultValue !== 'undefined') {\n          loadActions.push(changeAction(model, defaultValue));\n        } else {\n          if (parser) {\n            var parsedValue = parser(modelValue);\n\n            if (parsedValue !== modelValue) {\n              loadActions.push(changeAction(model, parsedValue));\n            }\n          }\n        }\n\n        (0, _batchActions.dispatchBatchIfNeeded)(model, loadActions, dispatch);\n\n        if (onLoad) onLoad(modelValue, fieldValue, this.node);\n      }\n    }, {\n      key: 'createEventHandler',\n      value: function createEventHandler(eventName) {\n        var _this3 = this;\n\n        var _props7 = this.props,\n            dispatch = _props7.dispatch,\n            model = _props7.model,\n            updateOn = _props7.updateOn,\n            _props7$validateOn = _props7.validateOn,\n            validateOn = _props7$validateOn === undefined ? updateOn : _props7$validateOn,\n            asyncValidateOn = _props7.asyncValidateOn,\n            controlProps = _props7.controlProps,\n            parser = _props7.parser,\n            ignore = _props7.ignore,\n            withField = _props7.withField,\n            fieldValue = _props7.fieldValue;\n\n\n        var eventAction = {\n          focus: _actions2.default.silentFocus,\n          blur: _actions2.default.blur\n        }[eventName];\n\n        var controlEventHandler = {\n          focus: controlProps.onFocus,\n          blur: controlProps.onBlur,\n          change: controlProps.onChange\n        }[eventName];\n\n        var dispatchBatchActions = function dispatchBatchActions(persistedEvent) {\n          var eventActions = [eventAction && eventAction(model), (0, _containsEvent2.default)(validateOn, eventName) && _this3.getValidateAction(persistedEvent, eventName), (0, _containsEvent2.default)(updateOn, eventName) && _this3.getChangeAction(persistedEvent)];\n\n          (0, _batchActions.dispatchBatchIfNeeded)(model, eventActions, dispatch);\n\n          return persistedEvent;\n        };\n\n        return function (event) {\n          if ((0, _containsEvent2.default)(ignore, eventName)) {\n            return controlEventHandler ? controlEventHandler(event) : event;\n          }\n\n          if (_this3.props.isToggle) {\n            return (0, _redux.compose)(dispatchBatchActions, (0, _persistEventWithCallback2.default)(controlEventHandler || _identity2.default))(event);\n          }\n\n          return (0, _redux.compose)(function (e) {\n            if ((0, _containsEvent2.default)(asyncValidateOn, eventName)) {\n              _this3.getAsyncValidateAction(e, eventName);\n            }\n\n            return e;\n          }, dispatchBatchActions, parser, function (e) {\n            return _this3.getValue(e);\n          }, (0, _persistEventWithCallback2.default)(controlEventHandler || _identity2.default))(event, withField ? fieldValue : undefined);\n        };\n      }\n    }, {\n      key: 'attachNode',\n      value: function attachNode() {\n        var node = findDOMNode && findDOMNode(this);\n\n        if (node) {\n          this.node = node;\n          this.willValidate = node.willValidate;\n        }\n      }\n    }, {\n      key: 'validate',\n      value: function validate(options) {\n        var _props8 = this.props,\n            model = _props8.model,\n            modelValue = _props8.modelValue,\n            fieldValue = _props8.fieldValue,\n            validators = _props8.validators,\n            errorValidators = _props8.errors,\n            dispatch = _props8.dispatch;\n\n\n        if (!validators && !errorValidators) return modelValue;\n        if (!fieldValue) return modelValue;\n\n        var fieldValidity = (0, _getValidity2.default)(validators, modelValue);\n        var fieldErrors = (0, _getValidity2.default)(errorValidators, modelValue);\n\n        var errors = validators ? (0, _merge2.default)((0, _invertValidity2.default)(fieldValidity), fieldErrors) : fieldErrors;\n\n        if (!(0, _shallowEqual2.default)(errors, fieldValue.errors)) {\n          dispatch(mergeOrSetErrors(model, errors, options));\n        } else if (options.clearIntents) {\n          dispatch(_actions2.default.clearIntents(model, options.clearIntents));\n        }\n\n        return modelValue;\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _props9 = this.props,\n            controlProps = _props9.controlProps,\n            component = _props9.component,\n            control = _props9.control,\n            getRef = _props9.getRef;\n\n\n        var mappedProps = (0, _omit2.default)(this.getMappedProps(), disallowedProps);\n\n        if (getRef) {\n          mappedProps.ref = getRef;\n        }\n\n        // If there is an existing control, clone it\n        if (control) {\n          return (0, _react.cloneElement)(control, mappedProps, controlProps.children);\n        }\n\n        return (0, _react.createElement)(component, _extends({}, controlProps, mappedProps));\n      }\n    }]);\n\n    return Control;\n  }(_react.Component);\n\n  Control.displayName = 'Control';\n\n  process.env.NODE_ENV !== \"production\" ? Control.propTypes = propTypes : void 0;\n\n  Control.defaultProps = {\n    changeAction: s.actions.change,\n    updateOn: 'change',\n    asyncValidateOn: 'blur',\n    parser: _identity2.default,\n    controlProps: emptyControlProps,\n    ignore: [],\n    dynamic: false,\n    component: 'input',\n    withField: true,\n    persist: false,\n    getValue: _getValue3.default,\n    isToggle: false\n  };\n\n  function mapStateToProps(state, props) {\n    var model = props.model,\n        controlProps = props.controlProps;\n\n\n    var finalControlProps = _extends({}, controlProps, (0, _omit2.default)(props, Object.keys(propTypes)));\n\n    var modelString = (0, _getModel2.default)(model, state);\n    var fieldValue = s.getFieldFromState(state, modelString) || _initialFieldState2.default;\n\n    return {\n      model: modelString,\n      modelValue: s.get(state, modelString),\n      fieldValue: fieldValue,\n      controlProps: finalControlProps\n    };\n  }\n\n  var ConnectedControl = (0, _resolveModel2.default)((0, _reactRedux.connect)(mapStateToProps)(Control));\n\n  /* eslint-disable react/prop-types */\n  var DefaultConnectedControl = function DefaultConnectedControl(props) {\n    return _react2.default.createElement(ConnectedControl, _extends({\n      mapProps: _extends({}, _controlPropsMap2.default.default, props.mapProps)\n    }, (0, _omit2.default)(props, 'mapProps')));\n  };\n\n  DefaultConnectedControl.custom = ConnectedControl;\n\n  DefaultConnectedControl.input = function (props) {\n    return _react2.default.createElement(ConnectedControl, _extends({\n      component: 'input',\n      mapProps: _extends({}, _controlPropsMap2.default.default, props.mapProps)\n    }, (0, _omit2.default)(props, 'mapProps')));\n  };\n\n  DefaultConnectedControl.text = function (props) {\n    return _react2.default.createElement(ConnectedControl, _extends({\n      component: 'input',\n      mapProps: _extends({}, _controlPropsMap2.default.text, {\n        type: 'text'\n      }, props.mapProps)\n    }, (0, _omit2.default)(props, 'mapProps')));\n  };\n\n  DefaultConnectedControl.textarea = function (props) {\n    return _react2.default.createElement(ConnectedControl, _extends({\n      component: 'textarea',\n      mapProps: _extends({}, _controlPropsMap2.default.textarea, props.mapProps)\n    }, (0, _omit2.default)(props, 'mapProps')));\n  };\n\n  DefaultConnectedControl.radio = function (props) {\n    return _react2.default.createElement(ConnectedControl, _extends({\n      component: 'input',\n      type: 'radio',\n      isToggle: true,\n      mapProps: _extends({}, _controlPropsMap2.default.radio, props.mapProps)\n    }, (0, _omit2.default)(props, 'mapProps')));\n  };\n\n  DefaultConnectedControl.checkbox = function (props) {\n    return _react2.default.createElement(ConnectedControl, _extends({\n      component: 'input',\n      type: 'checkbox',\n      isToggle: true,\n      mapProps: _extends({}, _controlPropsMap2.default.checkbox, props.mapProps),\n      getValue: _getValue2.getCheckboxValue,\n      changeAction: props.changeAction || s.actions.checkWithValue\n    }, (0, _omit2.default)(props, 'mapProps')));\n  };\n\n  DefaultConnectedControl.file = function (props) {\n    return _react2.default.createElement(ConnectedControl, _extends({\n      component: 'input',\n      type: 'file',\n      mapProps: _extends({}, _controlPropsMap2.default.file, props.mapProps)\n    }, (0, _omit2.default)(props, 'mapProps')));\n  };\n\n  DefaultConnectedControl.select = function (props) {\n    return _react2.default.createElement(ConnectedControl, _extends({\n      component: 'select',\n      mapProps: _extends({}, _controlPropsMap2.default.select, props.mapProps)\n    }, (0, _omit2.default)(props, 'mapProps')));\n  };\n\n  DefaultConnectedControl.button = function (props) {\n    return _react2.default.createElement(ConnectedControl, _extends({\n      component: 'button',\n      mapProps: _extends({}, _controlPropsMap2.default.button, props.mapProps)\n    }, (0, _omit2.default)(props, 'mapProps')));\n  };\n\n  DefaultConnectedControl.reset = function (props) {\n    return _react2.default.createElement(ConnectedControl, _extends({\n      component: 'button',\n      type: 'reset',\n      mapProps: _extends({}, _controlPropsMap2.default.reset, props.mapProps)\n    }, (0, _omit2.default)(props, 'mapProps')));\n  };\n\n  return DefaultConnectedControl;\n}\n\nexports.createControlClass = createControlClass;\nexports.default = createControlClass();","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/shallow-equal.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/* eslint-disable */\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if ((typeof objA === 'undefined' ? 'undefined' : _typeof(objA)) !== 'object' || objA === null || (typeof objB === 'undefined' ? 'undefined' : _typeof(objB)) !== 'object' || objB === null) {\n    return false;\n  }\n\n  if (objA instanceof Date && objB instanceof Date) {\n    return objA === objB;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var omitKeys = options.omitKeys,\n      deepKeys = options.deepKeys;\n\n  // Test for A's keys different from B.\n\n  for (var i = 0; i < keysA.length; i++) {\n    // if key is an omitted key, skip comparison\n    if (omitKeys && omitKeys.length && ~omitKeys.indexOf(keysA[i])) continue;\n\n    if (deepKeys && deepKeys.length && ~deepKeys.indexOf(keysA[i])) {\n      var result = shallowEqual(objA[keysA[i]], objB[keysA[i]]);\n\n      if (!result) return false;\n    } else if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.default = shallowEqual;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/merge.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mergeDeep;\n\nvar _icepick = require('icepick');\n\nvar _icepick2 = _interopRequireDefault(_icepick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction mergeDeep(target, source) {\n  return _icepick2.default.merge(target, source);\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/debounce.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = debounce;\nfunction debounce(func, delay) {\n  var timeout = void 0;\n\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var later = function later() {\n      timeout = null;\n      func.apply(null, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, delay);\n  };\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/get-model.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getModel;\nfunction getModel(model, state) {\n  return typeof model === 'function' && state ? model(state) : model;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/persist-event-with-callback.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = persistEventWithCallback;\nfunction persistEventWithCallback(callback) {\n  return function (event) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (event && event.persist) {\n      event.persist();\n    }\n\n    callback.apply(undefined, [event].concat(args));\n    return event;\n  };\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/constants/control-props-map.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _isMulti = require('../utils/is-multi');\n\nvar _isMulti2 = _interopRequireDefault(_isMulti);\n\nvar _iteratee = require('../utils/iteratee');\n\nvar _actions = require('../actions');\n\nvar _actions2 = _interopRequireDefault(_actions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getTextValue(value) {\n  if (typeof value === 'string') {\n    return '' + value;\n  }\n\n  return value;\n}\n\nfunction isChecked(props) {\n  if ((0, _isMulti2.default)(props.model)) {\n    if (!props.modelValue) return false;\n\n    return props.modelValue.some(function (item) {\n      return item === props.value;\n    });\n  }\n\n  return !!props.modelValue;\n}\n\nvar standardPropsMap = {\n  name: function name(props) {\n    return props.name || props.model;\n  },\n  disabled: function disabled(_ref) {\n    var fieldValue = _ref.fieldValue,\n        _disabled = _ref.disabled;\n    return (0, _iteratee.iterateeValue)(fieldValue, _disabled);\n  },\n  onChange: function onChange(_ref2) {\n    var _onChange = _ref2.onChange;\n    return _onChange;\n  },\n  onBlur: function onBlur(_ref3) {\n    var _onBlur = _ref3.onBlur;\n    return _onBlur;\n  },\n  onFocus: function onFocus(_ref4) {\n    var _onFocus = _ref4.onFocus;\n    return _onFocus;\n  },\n  onKeyPress: function onKeyPress(_ref5) {\n    var _onKeyPress = _ref5.onKeyPress;\n    return _onKeyPress;\n  }\n};\n\nvar textPropsMap = _extends({}, standardPropsMap, {\n  // the value passed into the control is either the original control's\n  // value prop (if the control is controlled) or the value controlled by\n  // <Control>.\n  value: function value(props) {\n    if (props.hasOwnProperty('value')) {\n      return props.value;\n    }\n\n    var value = getTextValue(props.viewValue);\n\n    return value === undefined ? '' : value;\n  }\n});\n\nvar getModelValue = function getModelValue(_ref6) {\n  var modelValue = _ref6.modelValue;\n  return modelValue;\n};\n\nvar controlPropsMap = {\n  default: _extends({}, standardPropsMap, {\n    value: function value(props) {\n      return props.hasOwnProperty('value') ? props.value : props.viewValue;\n    }\n  }),\n  checkbox: _extends({}, standardPropsMap, {\n    checked: function checked(props) {\n      return props.defaultChecked ? props.checked : isChecked(props);\n    }\n  }),\n  radio: _extends({}, standardPropsMap, {\n    checked: function checked(props) {\n      return props.defaultChecked ? props.checked : props.modelValue === props.value;\n    },\n    value: function value(props) {\n      return props.value;\n    }\n  }),\n  select: _extends({}, standardPropsMap, {\n    value: getModelValue\n  }),\n  text: textPropsMap,\n  textarea: textPropsMap,\n  file: standardPropsMap,\n  button: _extends({}, standardPropsMap, {\n    value: getModelValue\n  }),\n  reset: _extends({}, standardPropsMap, {\n    onClick: function onClick(props) {\n      return function (event) {\n        event.preventDefault();\n        props.dispatch(_actions2.default.reset(props.model));\n      };\n    }\n  })\n};\n\nexports.default = controlPropsMap;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/constants/validity-keys.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar validityKeys = ['badInput', 'customError', 'patternMismatch', 'rangeOverflow', 'rangeUnderflow', 'stepMismatch', 'tooLong', 'tooShort', 'typeMismatch', 'valueMissing'];\n\nexports.default = validityKeys;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/resolve-model.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.default = wrapWithModelResolver;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _shallowEqual = require('./shallow-equal');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ReactComponent = _react.PureComponent || _react.Component;\n\nfunction resolveModel(model, parentModel) {\n  if (parentModel) {\n    if (model[0] === '.' || model[0] === '[') {\n      return '' + parentModel + model;\n    }\n\n    if (typeof model === 'function') {\n      return function (state) {\n        return model(state, parentModel);\n      };\n    }\n  }\n\n  return model;\n}\n\nfunction wrapWithModelResolver(WrappedComponent) {\n  var ResolvedModelWrapper = function (_ReactComponent) {\n    _inherits(ResolvedModelWrapper, _ReactComponent);\n\n    function ResolvedModelWrapper(props, context) {\n      _classCallCheck(this, ResolvedModelWrapper);\n\n      var _this = _possibleConstructorReturn(this, (ResolvedModelWrapper.__proto__ || Object.getPrototypeOf(ResolvedModelWrapper)).call(this, props, context));\n\n      _this.model = context.model;\n      _this.store = context.localStore;\n      return _this;\n    }\n\n    _createClass(ResolvedModelWrapper, [{\n      key: 'shouldComponentUpdate',\n      value: function shouldComponentUpdate(nextProps) {\n        return !(0, _shallowEqual2.default)(this.props, nextProps);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var resolvedModel = resolveModel(this.props.model, this.model);\n\n        return _react2.default.createElement(WrappedComponent, _extends({}, this.props, {\n          model: resolvedModel,\n          store: this.store || undefined\n        }));\n      }\n    }]);\n\n    return ResolvedModelWrapper;\n  }(ReactComponent);\n\n  ResolvedModelWrapper.displayName = 'Modeled(' + WrappedComponent.displayName + ')';\n\n  ResolvedModelWrapper.propTypes = {\n    model: _propTypes2.default.any\n  };\n\n  ResolvedModelWrapper.contextTypes = {\n    model: _propTypes2.default.any,\n    localStore: _propTypes2.default.shape({\n      subscribe: _propTypes2.default.func,\n      dispatch: _propTypes2.default.func,\n      getState: _propTypes2.default.func\n    })\n  };\n\n  return ResolvedModelWrapper;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/is-native.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar isReactNative = typeof window !== 'undefined' && window.navigator && window.navigator.product && window.navigator.product === 'ReactNative';\n\nexports.default = isReactNative;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/constants/initial-field-state.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar initialFieldState = {\n  focus: false,\n  pending: false,\n  pristine: true,\n  submitted: false,\n  submitFailed: false,\n  retouched: false,\n  touched: false,\n  valid: true,\n  validating: false,\n  validated: false,\n  validity: {},\n  errors: {},\n  intents: []\n};\n\nexports.default = initialFieldState;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/contains-event.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = containsEvent;\nfunction containsEvent(events, event) {\n  if (typeof events === 'string') {\n    return events === event;\n  }\n\n  return !!~events.indexOf(event);\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/immutable.js":"module.exports = process.env.NODE_ENV === 'test'\n  ? require('./src/immutable')\n  : require('./lib/immutable');\n","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/src/immutable.js":"import { createModeler } from './reducers/model-reducer';\nimport formReducer from './reducers/form-reducer';\nimport { createModelReducerEnhancer } from './enhancers/modeled-enhancer';\nimport { createModelActions } from './actions/model-actions';\nimport controlPropsMap from './constants/control-props-map';\nimport { createFormCombiner } from './reducers/forms-reducer';\nimport { createErrorsClass } from './components/errors-component';\nimport { createControlClass } from './components/control-component';\nimport { createFormClass } from './components/form-component';\nimport { createFieldActions } from './actions/field-actions';\nimport { createTrack } from './utils/track';\nimport Fieldset from './components/fieldset-component';\nimport batch from './actions/batch-actions';\nimport getValue from './utils/get-value';\nimport immutableGetFromState from './utils/get-from-immutable-state';\nimport getForm, { getFormStateKey } from './utils/get-form';\nimport isPlainObject from './utils/is-plain-object';\nimport Immutable from 'immutable';\n\nimport {\n  initialFieldState,\n  actionTypes,\n  createFieldClass,\n  batched,\n  form,\n  getField,\n} from './index';\n\nfunction immutableSet(state, path, value) {\n  try {\n    return state.setIn(path, value);\n  } catch (error) {\n    throw new Error(`Unable to set path '${path.join(\n      '.')}' in state. Please make sure that state is an Immutable instance.`);\n  }\n}\n\nfunction immutableKeys(state) {\n  if (Immutable.Map.isMap(state)) {\n    return state.keySeq();\n  }\n  return Object.keys(state);\n}\n\nconst baseStrategy = {\n  get: immutableGetFromState,\n  set: immutableSet,\n  getValue,\n  keys: immutableKeys,\n  splice: (list, ...args) => list.splice(...args),\n  merge: (map, ...args) => map.merge(...args),\n  remove: (map, ...args) => map.remove(...args),\n  push: (list, ...args) => list.push(...args),\n  length: (list) => list.size,\n  object: new Immutable.Map(),\n  array: new Immutable.List(),\n  isObject: (state) => (isPlainObject(state) || Immutable.Map.isMap(state)),\n};\n\nfunction immutableGetForm(state, modelString) {\n  return getForm(state, modelString, baseStrategy);\n}\n\nfunction immutableGetFormStateKey(state, model) {\n  return getFormStateKey(state, model, baseStrategy);\n}\n\nfunction immutableGetFieldFromState(state, modelString) {\n  return getField(state, modelString, { getForm: immutableGetForm });\n}\n\nconst immutableStrategy = {\n  ...baseStrategy,\n  getForm: immutableGetForm,\n  getFieldFromState: immutableGetFieldFromState,\n};\n\nfunction transformAction(action) {\n  if (action.value && action.value.toJS) {\n    return {\n      ...action,\n      value: action.value.toJS(),\n    };\n  }\n\n  if (action.actions) {\n    return {\n      ...action,\n      actions: action.actions.map(transformAction),\n    };\n  }\n\n  return action;\n}\n\nfunction immutableFormReducer(model, initialState = new Immutable.Map(), options = {}) {\n  const _initialState = initialState && initialState.toJS\n    ? initialState.toJS()\n    : initialState;\n\n  return formReducer(model, _initialState, {\n    ...options,\n    transformAction,\n  });\n}\n\nconst immutableModelActions = createModelActions(immutableStrategy);\nconst immutableFieldActions = createFieldActions(immutableStrategy);\n\nconst immutableActions = {\n  ...immutableModelActions,\n  ...immutableFieldActions,\n  batch,\n};\n\nconst immutableModelReducer = createModeler(immutableStrategy);\nconst immutableModelReducerEnhancer = createModelReducerEnhancer(immutableModelReducer);\nconst ImmutableControl = createControlClass({\n  get: immutableGetFromState,\n  getFieldFromState: immutableGetFieldFromState,\n  actions: immutableModelActions,\n});\nconst ImmutableField = createFieldClass(controlPropsMap, {\n  Control: ImmutableControl,\n  getter: immutableGetFromState,\n  getFieldFromState: immutableGetFieldFromState,\n  changeAction: immutableModelActions.change,\n  actions: immutableModelActions,\n});\nconst ImmutableErrors = createErrorsClass(immutableStrategy);\nconst ImmutableForm = createFormClass({\n  ...immutableStrategy,\n  actions: immutableActions,\n});\n\nconst immutableFormCombiner = createFormCombiner({\n  modelReducer: immutableModelReducer,\n  formReducer: immutableFormReducer,\n  modeled: immutableModelReducerEnhancer,\n  toJS: (val) => ((val && val.toJS)\n    ? val.toJS()\n    : val),\n});\n\nconst immutableCombineForms = immutableFormCombiner.combineForms;\nconst immutableCreateForms = immutableFormCombiner.createForms;\n\nconst immutableTrack = createTrack(immutableStrategy);\n\nexport {\n  // Reducers\n  immutableFormReducer as formReducer,\n  immutableModelReducer as modelReducer,\n  immutableCombineForms as combineForms,\n  immutableCreateForms as createForms,\n\n  // Constants\n  initialFieldState,\n  immutableActions as actions,\n  actionTypes,\n  controlPropsMap as controls,\n\n  // Components\n  ImmutableField as Field,\n  ImmutableControl as Control,\n  ImmutableForm as Form,\n  ImmutableErrors as Errors,\n  Fieldset, // not immutable-specific\n\n  // Factories\n  createFieldClass,\n\n  // Enhancers\n  immutableModelReducerEnhancer as modeled,\n  batched,\n\n  // Selectors\n  form,\n\n  // Utilities\n  immutableGetFieldFromState as getField,\n  immutableGetForm as getForm,\n  immutableGetFormStateKey as getFormStateKey,\n  immutableTrack as track,\n};\n","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/combineForms.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = combineForms;\n\nvar _modeledEnhancer = require('./enhancers/modeled-enhancer');\n\nvar _modeledEnhancer2 = _interopRequireDefault(_modeledEnhancer);\n\nvar _modelReducer = require('./reducers/model-reducer');\n\nvar _modelReducer2 = _interopRequireDefault(_modelReducer);\n\nvar _formReducer = require('./reducers/form-reducer');\n\nvar _formReducer2 = _interopRequireDefault(_formReducer);\n\nvar _redux = require('redux');\n\nvar _redux2 = _interopRequireDefault(_redux);\n\nvar _nullAction = require('./constants/null-action');\n\nvar _nullAction2 = _interopRequireDefault(_nullAction);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction combineForms(forms) {\n  var formReducerKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'forms';\n\n  var formKeys = Object.keys(forms);\n  var modelReducers = {};\n  var initialFormState = {};\n\n  formKeys.forEach(function (formKey) {\n    var formValue = forms[formKey];\n\n    if (typeof formValue === 'function') {\n      var initialState = void 0;\n      try {\n        initialState = formValue(undefined, _nullAction2.default);\n      } catch (error) {\n        initialState = null;\n      }\n\n      modelReducers[formKey] = (0, _modeledEnhancer2.default)(formValue, formKey);\n      initialFormState[formKey] = initialState;\n    } else {\n      modelReducers[formKey] = (0, _modelReducer2.default)(formKey, formValue);\n      initialFormState[formKey] = formValue;\n    }\n  });\n\n  return (0, _redux2.default)(_extends({}, modelReducers, _defineProperty({}, formReducerKey, (0, _formReducer2.default)('', initialFormState))));\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/enhancers/modeled-enhancer.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createModelReducerEnhancer = undefined;\n\nvar _modelReducer2 = require('../reducers/model-reducer');\n\nvar _modelReducer3 = _interopRequireDefault(_modelReducer2);\n\nvar _nullAction = require('../constants/null-action');\n\nvar _nullAction2 = _interopRequireDefault(_nullAction);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createModelReducerEnhancer() {\n  var modelReducerCreator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _modelReducer3.default;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return function modelReducerEnhancer(reducer, model) {\n    var initialState = void 0;\n    try {\n      initialState = reducer(undefined, _nullAction2.default);\n    } catch (error) {\n      initialState = null;\n    }\n\n    var _modelReducer = modelReducerCreator(model, initialState, options);\n\n    return function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      var action = arguments[1];\n\n      var updatedState = _modelReducer(state, action);\n\n      return reducer(updatedState, action);\n    };\n  };\n}\n\nvar modelReducerEnhancer = createModelReducerEnhancer(_modelReducer3.default);\n\nexports.createModelReducerEnhancer = createModelReducerEnhancer;\nexports.default = modelReducerEnhancer;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/reducers/model-reducer.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createModeler = undefined;\n\nvar _get2 = require('../utils/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _icepick = require('icepick');\n\nvar _icepick2 = _interopRequireDefault(_icepick);\n\nvar _arraysEqual = require('../utils/arrays-equal');\n\nvar _arraysEqual2 = _interopRequireDefault(_arraysEqual);\n\nvar _toPath = require('../utils/to-path');\n\nvar _toPath2 = _interopRequireDefault(_toPath);\n\nvar _actionTypes = require('../action-types');\n\nvar _actionTypes2 = _interopRequireDefault(_actionTypes);\n\nvar _batchedEnhancer = require('../enhancers/batched-enhancer');\n\nvar _batchedEnhancer2 = _interopRequireDefault(_batchedEnhancer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction icepickSet(state, path, value) {\n  return _icepick2.default.setIn(state, path, value);\n}\n\nvar defaultStrategy = {\n  get: _get3.default,\n  set: icepickSet,\n  object: {}\n};\n\nfunction createModeler() {\n  var strategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultStrategy;\n  var getter = strategy.get,\n      setter = strategy.set,\n      object = strategy.object;\n\n\n  return function _createModelReducer(model) {\n    var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : object;\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var modelPath = (0, _toPath2.default)(model);\n\n    var modelReducer = function modelReducer() {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      var action = arguments[1];\n\n      if (!action.model) {\n        return state;\n      }\n\n      var path = (0, _toPath2.default)(action.model);\n\n      if (!(0, _arraysEqual2.default)(path.slice(0, modelPath.length), modelPath)) {\n        return state;\n      }\n\n      var localPath = path.slice(modelPath.length);\n\n      switch (action.type) {\n        case _actionTypes2.default.CHANGE:\n        case _actionTypes2.default.LOAD:\n          if (!localPath.length) {\n            return action.value;\n          }\n\n          if (getter(state, localPath) === action.value) {\n            return state;\n          }\n\n          return setter(state, localPath, action.value);\n\n        case _actionTypes2.default.RESET:\n          if (!localPath.length) {\n            return initialState;\n          }\n\n          if (getter(state, localPath) === getter(initialState, localPath)) {\n            return state;\n          }\n\n          return setter(state, localPath, getter(initialState, localPath));\n\n        default:\n          return state;\n      }\n    };\n\n    return (0, _batchedEnhancer2.default)(modelReducer, initialState, options);\n  };\n}\n\nvar modelReducer = createModeler();\n\nexports.createModeler = createModeler;\nexports.default = modelReducer;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/arrays-equal.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = arraysEqual;\nfunction arraysEqual(firstArray, secondArray) {\n  return firstArray && secondArray && firstArray.length === secondArray.length && firstArray.every(function (item, index) {\n    return item === secondArray[index];\n  });\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/enhancers/batched-enhancer.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _actionTypes = require('../action-types');\n\nvar _actionTypes2 = _interopRequireDefault(_actionTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createBatchReducer(reducer, initialState) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var transformAction = options.transformAction;\n\n\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments[1];\n\n    var transformedAction = transformAction ? transformAction(action) : action;\n\n    if (transformedAction.type === _actionTypes2.default.BATCH) {\n      return transformedAction.actions.reduce(reducer, state);\n    }\n\n    return reducer(state, transformedAction);\n  };\n}\n\nexports.default = createBatchReducer;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/reducers/form-reducer.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createInitialState = createInitialState;\nexports.default = createFormReducer;\n\nvar _get2 = require('../utils/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _arraysEqual = require('../utils/arrays-equal');\n\nvar _arraysEqual2 = _interopRequireDefault(_arraysEqual);\n\nvar _isPlainObject = require('../utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _toPath = require('../utils/to-path');\n\nvar _toPath2 = _interopRequireDefault(_toPath);\n\nvar _composeReducers = require('../utils/compose-reducers');\n\nvar _composeReducers2 = _interopRequireDefault(_composeReducers);\n\nvar _batchedEnhancer = require('../enhancers/batched-enhancer');\n\nvar _batchedEnhancer2 = _interopRequireDefault(_batchedEnhancer);\n\nvar _changeActionReducer = require('./form/change-action-reducer');\n\nvar _changeActionReducer2 = _interopRequireDefault(_changeActionReducer);\n\nvar _formActionsReducer = require('./form-actions-reducer');\n\nvar _createField = require('../utils/create-field');\n\nvar _createField2 = _interopRequireDefault(_createField);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction createInitialState(model, state) {\n  var customInitialFieldState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (Array.isArray(state) || (0, _isPlainObject2.default)(state)) {\n    return (0, _createField.createFormState)(model, state, customInitialFieldState, options);\n  }\n\n  return (0, _createField2.default)(model, state, customInitialFieldState, options);\n}\n\nfunction wrapFormReducer(plugin, modelPath, initialState) {\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments[1];\n\n    if (!action.model) return state;\n\n    var path = (0, _toPath2.default)(action.model);\n\n    if (modelPath.length && !(0, _arraysEqual2.default)(path.slice(0, modelPath.length), modelPath)) {\n      return state;\n    }\n\n    var localPath = path.slice(modelPath.length);\n\n    return plugin(state, action, localPath);\n  };\n}\n\nfunction createFormReducer(model) {\n  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$plugins = options.plugins,\n      plugins = _options$plugins === undefined ? [] : _options$plugins,\n      customInitialFieldState = options.initialFieldState,\n      _options$transformAct = options.transformAction,\n      transformAction = _options$transformAct === undefined ? null : _options$transformAct;\n\n  var modelPath = (0, _toPath2.default)(model);\n  var initialFormState = createInitialState(model, initialState, customInitialFieldState, options);\n\n  var defaultPlugins = [(0, _formActionsReducer.createFormActionsReducer)({ initialFieldState: customInitialFieldState }), _changeActionReducer2.default];\n\n  var wrappedPlugins = plugins.concat(defaultPlugins).map(function (plugin) {\n    return wrapFormReducer(plugin, modelPath, initialFormState);\n  });\n\n  return (0, _batchedEnhancer2.default)(_composeReducers2.default.apply(undefined, _toConsumableArray(wrappedPlugins)), undefined, {\n    transformAction: transformAction\n  });\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/compose-reducers.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = compose;\nfunction compose() {\n  for (var _len = arguments.length, reducers = Array(_len), _key = 0; _key < _len; _key++) {\n    reducers[_key] = arguments[_key];\n  }\n\n  return function (state, action) {\n    return reducers.reduceRight(function (prevState, reducer) {\n      return reducer(prevState, action);\n    }, state);\n  };\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/reducers/form/change-action-reducer.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = changeActionReducer;\n\nvar _actionTypes = require('../../action-types');\n\nvar _actionTypes2 = _interopRequireDefault(_actionTypes);\n\nvar _icepick = require('icepick');\n\nvar _icepick2 = _interopRequireDefault(_icepick);\n\nvar _get = require('../../utils/get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nvar _shallowEqual = require('../../utils/shallow-equal');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nvar _isPlainObject = require('../../utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _mapValues = require('../../utils/map-values');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nvar _formReducer = require('../form-reducer');\n\nvar _initialFieldState = require('../../constants/initial-field-state');\n\nvar _initialFieldState2 = _interopRequireDefault(_initialFieldState);\n\nvar _assocIn = require('../../utils/assoc-in');\n\nvar _assocIn2 = _interopRequireDefault(_assocIn);\n\nvar _getFormValue = require('../../utils/get-form-value');\n\nvar _getFormValue2 = _interopRequireDefault(_getFormValue);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction updateFieldValue(field, action) {\n  var parentModel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var value = action.value,\n      removeKeys = action.removeKeys,\n      silent = action.silent,\n      load = action.load,\n      model = action.model,\n      external = action.external;\n\n\n  var fieldState = field && field.$form ? field.$form : field;\n\n  var changedFieldProps = {\n    validated: false,\n    retouched: fieldState.submitted ? true : fieldState.retouched,\n    // If change originated from Control component (not externally),\n    // then there is no need to remind Control to validate itself.\n    intents: external ? [{ type: 'validate' }] : [],\n    pristine: silent ? fieldState.pristine : false,\n    value: value,\n    loadedValue: load ? value : fieldState.loadedValue\n  };\n\n  if ((0, _shallowEqual2.default)(field.value, value)) {\n    return _icepick2.default.merge(field, changedFieldProps);\n  }\n\n  if (removeKeys) {\n    var _ret = function () {\n      (0, _invariant2.default)(field && field.$form, 'Unable to remove keys. ' + 'Field for \"%s\" in store is not an array/object.', model);\n\n      var valueIsArray = Array.isArray(field.$form.value);\n      var removeKeysArray = Array.isArray(removeKeys) ? removeKeys : [removeKeys];\n\n      var result = void 0;\n\n      if (valueIsArray) {\n        result = [];\n\n        Object.keys(field).forEach(function (key) {\n          if (!!~removeKeysArray.indexOf(+key) || key === '$form') return;\n\n          result[key] = _extends({}, field[key]);\n        });\n\n        var finalResult = result.filter(function (f) {\n          return f;\n        }).map(function (subField, index) {\n          return _extends({}, subField, {\n            model: model + '.' + index\n          });\n        });\n\n        finalResult.$form = field.$form;\n\n        return {\n          v: finalResult\n        };\n      }\n\n      result = _extends({}, field);\n\n      Object.keys(field).forEach(function (key) {\n        if (!!~removeKeysArray.indexOf(key)) {\n          delete result['' + key];\n        }\n      });\n\n      return {\n        v: result\n      };\n    }();\n\n    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n  }\n\n  if (!Array.isArray(value) && !(0, _isPlainObject2.default)(value)) {\n    return _icepick2.default.merge(field, _icepick2.default.set(changedFieldProps, 'value', value));\n  }\n\n  var updatedField = (0, _mapValues2.default)(value, function (subValue, index) {\n    // TODO: refactor\n    var subField = field[index] || (0, _formReducer.createInitialState)('' + (parentModel ? parentModel + '.' : '') + model + '.' + index, subValue);\n\n    if (Object.hasOwnProperty.call(subField, '$form')) {\n      return updateFieldValue(subField, {\n        model: index,\n        value: subValue,\n        load: load\n      }, parentModel ? parentModel + '.' + model : model);\n    }\n\n    if ((0, _shallowEqual2.default)(subValue, subField.value)) {\n      return subField;\n    }\n\n    return _icepick2.default.merge(subField, _icepick2.default.assign(changedFieldProps, {\n      value: subValue,\n      loadedValue: load ? subValue : subField.loadedValue\n    }));\n  });\n\n  var dirtyFormState = _icepick2.default.merge(field.$form || _initialFieldState2.default, _icepick2.default.set(changedFieldProps, 'retouched', field.submitted || field.$form && field.$form.retouched));\n\n  return _icepick2.default.set(updatedField, '$form', dirtyFormState);\n}\n\nfunction changeActionReducer(state, action, localPath) {\n  if (action.type !== _actionTypes2.default.CHANGE) return state;\n\n  var field = (0, _get2.default)(state, localPath, (0, _formReducer.createInitialState)(action.model, action.value));\n\n  var updatedField = updateFieldValue(field, action);\n\n  if (!localPath.length) return updatedField;\n\n  var updatedState = (0, _assocIn2.default)(state, localPath, updatedField, function (form) {\n    if (!form.$form) return form;\n\n    var formValue = action.state ? (0, _get2.default)(action.state, form.$form.model) : (0, _getFormValue2.default)(form);\n\n    var formUpdates = _extends({}, form.$form, {\n      value: formValue\n    });\n\n    if (action.silent) {\n      formUpdates.loadedValue = formValue;\n    } else {\n      formUpdates.pristine = false;\n    }\n\n    return _extends({}, form, {\n      $form: formUpdates\n    });\n  });\n\n  return updatedState;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/assoc-in.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assoc = assoc;\nexports.default = assocIn;\n\nvar _identity = require('./identity');\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction objClone(obj) {\n  var keys = Object.keys(obj);\n  var length = keys.length;\n  var result = {};\n  var index = 0;\n  var key = void 0;\n\n  for (; index < length; index += 1) {\n    key = keys[index];\n    result[key] = obj[key];\n  }\n  return result;\n}\n\nfunction assoc(state, key, value) {\n  var newState = objClone(state);\n\n  newState[key] = value;\n\n  return newState;\n}\n\nfunction assocIn(state, path, value) {\n  var fn = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _identity2.default;\n\n  if (!path.length) return value;\n\n  var key0 = path[0];\n\n  if (path.length === 1) {\n    return fn(assoc(state, key0, value));\n  }\n\n  return fn(assoc(state, key0, assocIn(state[key0] || {}, path.slice(1), value, fn)));\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/get-form-value.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getFormValue;\n\nvar _mapValues = require('./map-values');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getFormValue(form) {\n  if (form && !form.$form) {\n    return typeof form.loadedValue !== 'undefined' ? form.loadedValue : form.initialValue;\n  }\n\n  var result = (0, _mapValues2.default)(form, function (field, key) {\n    if (key === '$form') return undefined;\n\n    return getFormValue(field);\n  });\n\n  delete result.$form;\n\n  return result;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/reducers/form-actions-reducer.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.createFormActionsReducer = createFormActionsReducer;\n\nvar _actionTypes = require('../action-types');\n\nvar _actionTypes2 = _interopRequireDefault(_actionTypes);\n\nvar _updateField = require('../utils/update-field');\n\nvar _updateField2 = _interopRequireDefault(_updateField);\n\nvar _updateParentForms = require('../utils/update-parent-forms');\n\nvar _updateParentForms2 = _interopRequireDefault(_updateParentForms);\n\nvar _updateSubFields = require('../utils/update-sub-fields');\n\nvar _updateSubFields2 = _interopRequireDefault(_updateSubFields);\n\nvar _getFieldForm = require('../utils/get-field-form');\n\nvar _getFieldForm2 = _interopRequireDefault(_getFieldForm);\n\nvar _isPristine = require('../form/is-pristine');\n\nvar _isPristine2 = _interopRequireDefault(_isPristine);\n\nvar _map = require('../utils/map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _isPlainObject = require('../utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _mapValues = require('../utils/map-values');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nvar _inverse = require('../utils/inverse');\n\nvar _inverse2 = _interopRequireDefault(_inverse);\n\nvar _mergeValidity = require('../utils/merge-validity');\n\nvar _mergeValidity2 = _interopRequireDefault(_mergeValidity);\n\nvar _isValid = require('../form/is-valid');\n\nvar _isValid2 = _interopRequireDefault(_isValid);\n\nvar _isValidityValid = require('../utils/is-validity-valid');\n\nvar _isValidityValid2 = _interopRequireDefault(_isValidityValid);\n\nvar _isValidityInvalid = require('../utils/is-validity-invalid');\n\nvar _isValidityInvalid2 = _interopRequireDefault(_isValidityInvalid);\n\nvar _fieldActions = require('../actions/field-actions');\n\nvar _fieldActions2 = _interopRequireDefault(_fieldActions);\n\nvar _toPath = require('../utils/to-path');\n\nvar _toPath2 = _interopRequireDefault(_toPath);\n\nvar _initialFieldState = require('../constants/initial-field-state');\n\nvar _initialFieldState2 = _interopRequireDefault(_initialFieldState);\n\nvar _createField = require('../utils/create-field');\n\nvar _assocIn = require('../utils/assoc-in');\n\nvar _assocIn2 = _interopRequireDefault(_assocIn);\n\nvar _getFormValue = require('../utils/get-form-value');\n\nvar _getFormValue2 = _interopRequireDefault(_getFormValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar resetFieldState = function resetFieldState(field, customInitialFieldState) {\n  if (!(0, _isPlainObject2.default)(field)) return field;\n\n  var intents = [{ type: 'validate' }];\n  var resetValue = (0, _createField.getMeta)(field, 'initialValue');\n  var loadedValue = (0, _createField.getMeta)(field, 'loadedValue');\n\n  if (loadedValue && resetValue !== loadedValue) {\n    intents.push({ type: 'load' });\n    resetValue = loadedValue;\n  }\n\n  return (0, _createField.fieldOrForm)((0, _createField.getMeta)(field, 'model'), resetValue, _extends({}, customInitialFieldState, { intents: intents }));\n};\n\nvar setInitialFieldState = function setInitialFieldState(customInitialFieldState) {\n  return function (field, key) {\n    if (!(0, _isPlainObject2.default)(field)) return field;\n\n    if (key === '$form') {\n      return (0, _createField.updateFieldState)(customInitialFieldState, {\n        value: field.value,\n        model: field.model\n      });\n    }\n\n    if (field.$form) return (0, _mapValues2.default)(field, resetFieldState);\n\n    return (0, _createField.updateFieldState)(customInitialFieldState, {\n      value: field.value,\n      model: field.model\n    });\n  };\n};\n\nvar addIntent = function addIntent(intents, newIntent) {\n  if (!intents) return [newIntent];\n  if (intents.some(function (intent) {\n    return intent.type === newIntent.type;\n  })) return intents;\n\n  return intents.concat(newIntent);\n};\n\nvar clearIntents = function clearIntents(intents, oldIntent) {\n  if (!intents || typeof oldIntent === 'undefined') return [];\n  return intents.filter(function (intent) {\n    return intent.type !== oldIntent.type;\n  });\n};\n\nvar defaultOptions = {\n  initialFieldState: _initialFieldState2.default\n};\n\nfunction createFormActionsReducer(options) {\n  var formOptions = options ? _extends({}, defaultOptions, options, {\n    initialFieldState: _extends({}, defaultOptions.initialFieldState, options.initialFieldState)\n  }) : defaultOptions;\n\n  var customInitialFieldState = formOptions.initialFieldState;\n\n  return function formActionsReducer(state, action, localPath) {\n    var _getFieldAndForm = (0, _updateField.getFieldAndForm)(state, localPath),\n        _getFieldAndForm2 = _slicedToArray(_getFieldAndForm, 1),\n        field = _getFieldAndForm2[0];\n\n    var fieldState = field && field.$form ? field.$form : field;\n\n    var intents = fieldState.intents;\n\n\n    var fieldUpdates = {};\n    var subFieldUpdates = {};\n    var parentFormUpdates = void 0;\n\n    switch (action.type) {\n      case _actionTypes2.default.FOCUS:\n        {\n          fieldUpdates = {\n            focus: true,\n            intents: action.silent ? intents : addIntent(intents, action)\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.BLUR:\n      case _actionTypes2.default.SET_TOUCHED:\n        {\n          var fieldForm = (0, _getFieldForm2.default)(state, localPath).$form;\n\n          fieldUpdates = {\n            focus: action.type === _actionTypes2.default.BLUR ? false : field.focus,\n            touched: true,\n            retouched: fieldForm ? !!(fieldForm.submitted || fieldForm.submitFailed) : false\n          };\n\n          parentFormUpdates = {\n            touched: true,\n            retouched: fieldUpdates.retouched\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_UNTOUCHED:\n        {\n          fieldUpdates = {\n            focus: false,\n            touched: false\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_PRISTINE:\n      case _actionTypes2.default.SET_DIRTY:\n        {\n          var pristine = action.type === _actionTypes2.default.SET_PRISTINE;\n\n          fieldUpdates = {\n            pristine: pristine\n          };\n\n          subFieldUpdates = {\n            pristine: pristine\n          };\n\n          parentFormUpdates = function parentFormUpdates(form) {\n            return { pristine: (0, _isPristine2.default)(form) };\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_VALIDATING:\n        {\n          fieldUpdates = {\n            validating: action.validating,\n            validated: !action.validating\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_VALIDITY:\n      case _actionTypes2.default.SET_ERRORS:\n        {\n          var _fieldUpdates;\n\n          var isErrors = action.type === _actionTypes2.default.SET_ERRORS;\n          var validity = void 0;\n          if (isErrors) {\n            validity = action.merge ? (0, _mergeValidity2.default)(fieldState.errors, action.errors) : action.errors;\n          } else {\n            validity = action.merge ? (0, _mergeValidity2.default)(fieldState.validity, action.validity) : action.validity;\n          }\n\n          var inverseValidity = (0, _isPlainObject2.default)(validity) ? (0, _mapValues2.default)(validity, _inverse2.default) : !validity;\n\n          // If the field is a form, its validity is\n          // also based on whether its fields are all valid.\n          var areFieldsValid = field && field.$form ? (0, _isValid.fieldsValid)(field, { async: false }) : true;\n\n          fieldUpdates = (_fieldUpdates = {}, _defineProperty(_fieldUpdates, isErrors ? 'errors' : 'validity', validity), _defineProperty(_fieldUpdates, isErrors ? 'validity' : 'errors', inverseValidity), _defineProperty(_fieldUpdates, 'validating', false), _defineProperty(_fieldUpdates, 'validated', true), _defineProperty(_fieldUpdates, 'valid', areFieldsValid && (isErrors ? !(0, _isValidityInvalid2.default)(validity) : (0, _isValidityValid2.default)(validity))), _fieldUpdates);\n\n          if (action.async) {\n            var actionValidity = isErrors ? action.errors : action.validity;\n\n            fieldUpdates.asyncKeys = (0, _isPlainObject2.default)(actionValidity) || Array.isArray(actionValidity) ? Object.keys(actionValidity) : true;\n          }\n\n          parentFormUpdates = function parentFormUpdates(form) {\n            return { valid: (0, _isValid2.default)(form) };\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_FIELDS_VALIDITY:\n        {\n          return (0, _map2.default)(action.fieldsValidity, function (fieldValidity, subField) {\n            return _fieldActions2.default.setValidity(subField, fieldValidity, action.options);\n          }).reduce(function (accState, subAction) {\n            return formActionsReducer(accState, subAction, localPath.concat((0, _toPath2.default)(subAction.model)));\n          }, state);\n        }\n\n      case _actionTypes2.default.RESET_VALIDITY:\n        {\n          var _ret = function () {\n            var validity = _extends({}, fieldState.validity);\n            var errors = _extends({}, fieldState.errors);\n            var valid = void 0;\n\n            if (action.omitKeys) {\n              action.omitKeys.forEach(function (key) {\n                delete validity[key];\n                delete errors[key];\n              });\n              valid = (0, _isValidityValid2.default)(validity);\n            } else {\n              validity = customInitialFieldState.validity;\n              errors = customInitialFieldState.errors;\n              valid = customInitialFieldState.valid;\n            }\n\n            fieldUpdates = {\n              valid: valid,\n              validity: validity,\n              errors: errors\n            };\n\n            subFieldUpdates = {\n              valid: customInitialFieldState.valid,\n              validity: customInitialFieldState.validity,\n              errors: customInitialFieldState.errors\n            };\n\n            return 'break';\n          }();\n\n          if (_ret === 'break') break;\n        }\n\n      case _actionTypes2.default.SET_PENDING:\n        {\n          fieldUpdates = {\n            pending: action.pending,\n            submitted: false,\n            submitFailed: false,\n            retouched: false\n          };\n\n          parentFormUpdates = { pending: action.pending };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_SUBMITTED:\n        {\n          var submitted = !!action.submitted;\n\n          fieldUpdates = {\n            pending: false,\n            submitted: submitted,\n            submitFailed: submitted ? false : fieldState && fieldState.submitFailed,\n            touched: true,\n            retouched: false\n          };\n\n          subFieldUpdates = {\n            submitted: submitted,\n            submitFailed: submitted ? false : fieldUpdates.submitFailed,\n            retouched: false\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_SUBMIT_FAILED:\n        {\n          fieldUpdates = {\n            pending: false,\n            submitted: fieldState.submitted && !action.submitFailed,\n            submitFailed: !!action.submitFailed,\n            touched: true,\n            retouched: false\n          };\n\n          subFieldUpdates = {\n            pending: false,\n            submitted: !action.submitFailed,\n            submitFailed: !!action.submitFailed,\n            touched: true,\n            retouched: false\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.RESET:\n        {\n          return localPath.length ? (0, _assocIn2.default)(state, localPath, resetFieldState(field, customInitialFieldState)) : resetFieldState(field, customInitialFieldState);\n        }\n\n      case _actionTypes2.default.SET_INITIAL:\n        {\n          var setCustomInitialFieldState = setInitialFieldState(customInitialFieldState);\n\n          return (0, _updateField2.default)(state, localPath, setCustomInitialFieldState, setCustomInitialFieldState);\n        }\n\n      case _actionTypes2.default.ADD_INTENT:\n        {\n          fieldUpdates = {\n            intents: addIntent(intents, action.intent)\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.CLEAR_INTENTS:\n        {\n          fieldUpdates = {\n            intents: clearIntents(intents, action.intent)\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.CHANGE:\n        {\n          return (0, _updateParentForms2.default)(state, localPath, function (parentForm) {\n            var formModelValue = (0, _getFormValue2.default)(parentForm);\n\n            if (!parentForm.$form) {\n              return _extends({}, customInitialFieldState, {\n                value: formModelValue,\n                initialValue: formModelValue\n              });\n            }\n\n            // If the form is invalid (due to async validity)\n            // but its fields are valid and the value has changed,\n            // the form should be \"valid\" again.\n            if ((!Object.keys(parentForm.$form.validity).length || !parentForm.$form.validity) && !parentForm.$form.valid && (0, _isValid2.default)(parentForm, { async: false })) {\n              return {\n                value: formModelValue,\n                validity: true,\n                errors: false,\n                valid: true\n              };\n            }\n\n            return {\n              value: formModelValue\n            };\n          });\n        }\n\n      default:\n        return state;\n    }\n\n    if (action.clearIntents) {\n      fieldUpdates.intents = clearIntents(intents, action.clearIntents);\n    }\n\n    var updatedField = (0, _updateField2.default)(state, localPath, fieldUpdates);\n    var updatedSubFields = Object.keys(subFieldUpdates).length ? (0, _updateSubFields2.default)(updatedField, localPath, subFieldUpdates) : updatedField;\n    var updatedParentForms = parentFormUpdates ? (0, _updateParentForms2.default)(updatedSubFields, localPath, parentFormUpdates) : updatedSubFields;\n\n    return updatedParentForms;\n  };\n}\n\nexports.default = createFormActionsReducer();","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/update-field.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.getFieldAndForm = getFieldAndForm;\nexports.default = updateField;\n\nvar _icepick = require('icepick');\n\nvar _icepick2 = _interopRequireDefault(_icepick);\n\nvar _get = require('./get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nvar _mapValues = require('./map-values');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nvar _formReducer = require('../reducers/form-reducer');\n\nvar _createField = require('./create-field');\n\nvar _assocIn = require('./assoc-in');\n\nvar _assocIn2 = _interopRequireDefault(_assocIn);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction tempInitialState(path) {\n  var initialValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (path.length === 1) return _defineProperty({}, path[0], initialValue);\n\n  return _defineProperty({}, path[0], tempInitialState(path.slice(1), initialValue));\n}\n\nfunction getFieldAndForm(formState, modelPath) {\n  var field = (0, _get2.default)(formState, modelPath);\n  var form = formState;\n\n  (0, _invariant2.default)(form, 'Could not find form for \"%s\" in the store.', modelPath);\n\n  if (!field) {\n    var initialValue = (0, _get2.default)(formState.$form.initialValue, modelPath);\n\n    form = _icepick2.default.merge((0, _formReducer.createInitialState)(formState.$form.model, tempInitialState(modelPath, initialValue)), formState);\n\n    field = (0, _get2.default)(form, modelPath);\n  }\n\n  return [field, form];\n}\n\nfunction updateField(state, path, newState, newSubState, updater) {\n  var _getFieldAndForm = getFieldAndForm(state, path),\n      _getFieldAndForm2 = _slicedToArray(_getFieldAndForm, 2),\n      field = _getFieldAndForm2[0],\n      fullState = _getFieldAndForm2[1];\n\n  if (!field) return state;\n\n  var isForm = field.hasOwnProperty('$form');\n  var fieldPath = isForm ? [].concat(_toConsumableArray(path), ['$form']) : path;\n\n  var fieldState = isForm ? field.$form : field;\n\n  var updatedFieldState = typeof newState === 'function' ? newState(fieldState) : newState;\n\n  if (isForm && newSubState) {\n    var formState = (0, _mapValues2.default)(field, function (subState, key) {\n      if (key === '$form') {\n        return (0, _createField.updateFieldState)(fieldState, updatedFieldState);\n      }\n\n      var updatedSubState = typeof newSubState === 'function' ? newSubState(subState, updatedFieldState) : newSubState;\n\n      return (0, _createField.updateFieldState)(subState, updatedSubState);\n    });\n\n    if (!path.length) return formState;\n\n    return (0, _assocIn2.default)(fullState, path, formState, updater);\n  }\n\n  return (0, _assocIn2.default)(fullState, fieldPath, (0, _createField.updateFieldState)(fieldState, updatedFieldState), updater);\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/create-field.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.fieldOrForm = fieldOrForm;\nexports.getMeta = getMeta;\nexports.updateFieldState = updateFieldState;\nexports.default = createFieldState;\nexports.createFormState = createFormState;\n\nvar _initialFieldState = require('../constants/initial-field-state');\n\nvar _initialFieldState2 = _interopRequireDefault(_initialFieldState);\n\nvar _isPlainObject = require('./is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _mapValues = require('./map-values');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable no-use-before-define */\nfunction fieldOrForm(model, value, customInitialFieldState) {\n  // TODO: create toModel()\n  var stringModel = Array.isArray(model) ? model.join('.') : model;\n\n  if (Array.isArray(value) || (0, _isPlainObject2.default)(value)) {\n    return createFormState(stringModel, value, customInitialFieldState);\n  }\n\n  return createFieldState(stringModel, value, customInitialFieldState);\n}\n/* eslint-enable no-use-before-define */\n\nfunction getMeta(fieldLike, prop) {\n  if (fieldLike && fieldLike.$form) return fieldLike.$form[prop];\n\n  return fieldLike[prop];\n}\n\nfunction getSubModelString(model, subModel) {\n  if (!model) return subModel;\n\n  return model + '.' + subModel;\n}\n\nfunction updateFieldState(existingFieldState, updatedFieldState) {\n  var newField = _extends({}, existingFieldState, updatedFieldState);\n\n  return newField;\n}\n\nfunction createFieldState(model, value, customInitialFieldState) {\n  return _extends({}, _initialFieldState2.default, customInitialFieldState, {\n    model: model,\n    value: value,\n    initialValue: value\n  });\n}\n\nfunction createFormState(model, values, customInitialFieldState) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var state = {\n    $form: createFieldState(model, values, customInitialFieldState, options)\n  };\n\n  if (options.lazy) return state;\n\n  Object.assign(state, (0, _mapValues2.default)(values, function (value, key) {\n    var subModel = getSubModelString(model, key);\n\n    return fieldOrForm(subModel, value, customInitialFieldState);\n  }));\n\n  return state;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/update-parent-forms.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = updateParentForms;\n\nvar _icepick = require('icepick');\n\nvar _icepick2 = _interopRequireDefault(_icepick);\n\nvar _get = require('./get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nvar _assocIn = require('./assoc-in');\n\nvar _assocIn2 = _interopRequireDefault(_assocIn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// import { updateFieldState } from './create-field';\n\nfunction updateParentForms(state, localPath, updater) {\n  var parentLocalPath = localPath.slice(0, -1);\n\n  var value = parentLocalPath.length ? (0, _get2.default)(state, parentLocalPath) : state;\n\n  if (!value) return state;\n\n  var form = value.$form;\n\n  var updatedValue = typeof updater === 'function' ? updater(value) : updater;\n\n  // const updatedForm = updateFieldState(form, updatedValue);\n\n  var newState = (0, _assocIn2.default)(state, [].concat(_toConsumableArray(parentLocalPath), ['$form']), _icepick2.default.merge(form, updatedValue));\n\n  if (!parentLocalPath.length) return newState;\n\n  return updateParentForms(newState, parentLocalPath, updater);\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/update-sub-fields.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = updateSubFields;\n\nvar _get = require('./get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nvar _assocIn = require('./assoc-in');\n\nvar _assocIn2 = _interopRequireDefault(_assocIn);\n\nvar _createField = require('./create-field');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction updateSubField(subField, newSubState) {\n  // Form\n  if (subField && subField.$form) {\n    var _ret = function () {\n      // intermediate value - not mutated outside function\n      var result = {};\n\n      Object.keys(subField).forEach(function (key) {\n        if (key === '$form') {\n          result.$form = (0, _createField.updateFieldState)(subField.$form, newSubState);\n        } else {\n          result[key] = updateSubField(subField[key], newSubState);\n        }\n      });\n\n      return {\n        v: result\n      };\n    }();\n\n    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n  }\n\n  // Field\n  return (0, _createField.updateFieldState)(subField, newSubState);\n}\n\nfunction updateSubFields(state, localPath, newState) {\n  var field = (0, _get2.default)(state, localPath);\n\n  // only forms can have fields -\n  // skip if field is not a form\n  if (!field || !field.$form) return state;\n\n  // intermediate value - not mutated outside function\n  var updatedField = {};\n\n  Object.keys(field).forEach(function (key) {\n    if (key === '$form') {\n      updatedField.$form = field.$form;\n    } else {\n      updatedField[key] = updateSubField(field[key], newState);\n    }\n  });\n\n  if (!localPath.length) return updatedField;\n\n  return (0, _assocIn2.default)(state, localPath, updatedField);\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/get-field-form.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getFieldForm;\n\nvar _get = require('./get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getFieldForm(state, path) {\n  var formPath = path.slice(0, -1);\n\n  if (!formPath.length) return state;\n\n  var form = (0, _get2.default)(state, formPath);\n\n  (0, _invariant2.default)(form, 'Could not find form for \"%s\" in the store.', formPath.join('.'));\n\n  return form;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/form/is-pristine.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPristine;\nfunction isPristine(formState) {\n  if (!formState) return false;\n\n  // Form is pristine\n  if (!formState.$form) {\n    return formState.pristine;\n  }\n\n  // Every field in form is pristine\n  return Object.keys(formState).every(function (key) {\n    if (key === '$form') return true;\n\n    return isPristine(formState[key]);\n  });\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/map.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = map;\nfunction map(values, iteratee) {\n  if (Array.isArray(values)) {\n    return values.map(iteratee);\n  }\n\n  var result = Object.keys(values).map(function (key) {\n    return iteratee(values[key], key, values);\n  });\n\n  return result;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/inverse.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inverse;\nfunction inverse(value) {\n  return !value;\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/utils/merge-validity.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = mergeValidity;\n\nvar _isPlainObject = require('./is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _merge = require('./merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction mergeValidity(fieldValidity, actionValidity) {\n  if (!(0, _isPlainObject2.default)(fieldValidity) || !(0, _isPlainObject2.default)(actionValidity)) {\n    // can't merge string/boolean validity with keyed validity\n    return actionValidity;\n  }\n\n  return (0, _merge2.default)(_extends({}, fieldValidity), actionValidity);\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/form/is-valid.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValid;\nexports.fieldsValid = fieldsValid;\n\nvar _isPlainObject = require('../utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isValid(formState) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { async: true };\n\n  if (!formState) return true;\n\n  if (!formState.$form) {\n    var errors = formState.errors;\n\n\n    if (!Array.isArray(errors) && !(0, _isPlainObject2.default)(errors)) {\n      // If asyncKeys = true and the error is not an\n      // array or object (e.g. string), form errors are entirely async\n      // and should be ignored when async = true.\n      return !options.async && formState.asyncKeys || !errors;\n    }\n\n    return Object.keys(formState.errors).every(function (errorKey) {\n      // if specified to ignore async validator keys and\n      // current error key is an async validator key,\n      // treat key as valid\n      if (!options.async && formState.asyncKeys && !!~formState.asyncKeys.indexOf(errorKey)) {\n        return true;\n      }\n\n      var valid = !formState.errors[errorKey];\n\n      return valid;\n    });\n  }\n\n  return Object.keys(formState).every(function (key) {\n    return isValid(formState[key], options);\n  });\n}\n\nfunction fieldsValid(formState) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { async: true };\n\n  return Object.keys(formState).every(function (key) {\n    return key === '$form' || isValid(formState[key], options);\n  });\n}","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/immutable.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.track = exports.getFormStateKey = exports.getForm = exports.getField = exports.form = exports.batched = exports.modeled = exports.createFieldClass = exports.Fieldset = exports.Errors = exports.Form = exports.Control = exports.Field = exports.controls = exports.actionTypes = exports.actions = exports.initialFieldState = exports.createForms = exports.combineForms = exports.modelReducer = exports.formReducer = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _modelReducer = require('./reducers/model-reducer');\n\nvar _formReducer = require('./reducers/form-reducer');\n\nvar _formReducer2 = _interopRequireDefault(_formReducer);\n\nvar _modeledEnhancer = require('./enhancers/modeled-enhancer');\n\nvar _modelActions = require('./actions/model-actions');\n\nvar _controlPropsMap = require('./constants/control-props-map');\n\nvar _controlPropsMap2 = _interopRequireDefault(_controlPropsMap);\n\nvar _formsReducer = require('./reducers/forms-reducer');\n\nvar _errorsComponent = require('./components/errors-component');\n\nvar _controlComponent = require('./components/control-component');\n\nvar _formComponent = require('./components/form-component');\n\nvar _fieldActions = require('./actions/field-actions');\n\nvar _track = require('./utils/track');\n\nvar _fieldsetComponent = require('./components/fieldset-component');\n\nvar _fieldsetComponent2 = _interopRequireDefault(_fieldsetComponent);\n\nvar _batchActions = require('./actions/batch-actions');\n\nvar _batchActions2 = _interopRequireDefault(_batchActions);\n\nvar _getValue = require('./utils/get-value');\n\nvar _getValue2 = _interopRequireDefault(_getValue);\n\nvar _getFromImmutableState = require('./utils/get-from-immutable-state');\n\nvar _getFromImmutableState2 = _interopRequireDefault(_getFromImmutableState);\n\nvar _getForm = require('./utils/get-form');\n\nvar _getForm2 = _interopRequireDefault(_getForm);\n\nvar _isPlainObject = require('./utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _index = require('./index');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction immutableSet(state, path, value) {\n  try {\n    return state.setIn(path, value);\n  } catch (error) {\n    throw new Error('Unable to set path \\'' + path.join('.') + '\\' in state. Please make sure that state is an Immutable instance.');\n  }\n}\n\nfunction immutableKeys(state) {\n  if (_immutable2.default.Map.isMap(state)) {\n    return state.keySeq();\n  }\n  return Object.keys(state);\n}\n\nvar baseStrategy = {\n  get: _getFromImmutableState2.default,\n  set: immutableSet,\n  getValue: _getValue2.default,\n  keys: immutableKeys,\n  splice: function splice(list) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return list.splice.apply(list, args);\n  },\n  merge: function merge(map) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return map.merge.apply(map, args);\n  },\n  remove: function remove(map) {\n    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return map.remove.apply(map, args);\n  },\n  push: function push(list) {\n    for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n\n    return list.push.apply(list, args);\n  },\n  length: function length(list) {\n    return list.size;\n  },\n  object: new _immutable2.default.Map(),\n  array: new _immutable2.default.List(),\n  isObject: function isObject(state) {\n    return (0, _isPlainObject2.default)(state) || _immutable2.default.Map.isMap(state);\n  }\n};\n\nfunction immutableGetForm(state, modelString) {\n  return (0, _getForm2.default)(state, modelString, baseStrategy);\n}\n\nfunction immutableGetFormStateKey(state, model) {\n  return (0, _getForm.getFormStateKey)(state, model, baseStrategy);\n}\n\nfunction immutableGetFieldFromState(state, modelString) {\n  return (0, _index.getField)(state, modelString, { getForm: immutableGetForm });\n}\n\nvar immutableStrategy = _extends({}, baseStrategy, {\n  getForm: immutableGetForm,\n  getFieldFromState: immutableGetFieldFromState\n});\n\nfunction transformAction(action) {\n  if (action.value && action.value.toJS) {\n    return _extends({}, action, {\n      value: action.value.toJS()\n    });\n  }\n\n  if (action.actions) {\n    return _extends({}, action, {\n      actions: action.actions.map(transformAction)\n    });\n  }\n\n  return action;\n}\n\nfunction immutableFormReducer(model) {\n  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _immutable2.default.Map();\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var _initialState = initialState && initialState.toJS ? initialState.toJS() : initialState;\n\n  return (0, _formReducer2.default)(model, _initialState, _extends({}, options, {\n    transformAction: transformAction\n  }));\n}\n\nvar immutableModelActions = (0, _modelActions.createModelActions)(immutableStrategy);\nvar immutableFieldActions = (0, _fieldActions.createFieldActions)(immutableStrategy);\n\nvar immutableActions = _extends({}, immutableModelActions, immutableFieldActions, {\n  batch: _batchActions2.default\n});\n\nvar immutableModelReducer = (0, _modelReducer.createModeler)(immutableStrategy);\nvar immutableModelReducerEnhancer = (0, _modeledEnhancer.createModelReducerEnhancer)(immutableModelReducer);\nvar ImmutableControl = (0, _controlComponent.createControlClass)({\n  get: _getFromImmutableState2.default,\n  getFieldFromState: immutableGetFieldFromState,\n  actions: immutableModelActions\n});\nvar ImmutableField = (0, _index.createFieldClass)(_controlPropsMap2.default, {\n  Control: ImmutableControl,\n  getter: _getFromImmutableState2.default,\n  getFieldFromState: immutableGetFieldFromState,\n  changeAction: immutableModelActions.change,\n  actions: immutableModelActions\n});\nvar ImmutableErrors = (0, _errorsComponent.createErrorsClass)(immutableStrategy);\nvar ImmutableForm = (0, _formComponent.createFormClass)(_extends({}, immutableStrategy, {\n  actions: immutableActions\n}));\n\nvar immutableFormCombiner = (0, _formsReducer.createFormCombiner)({\n  modelReducer: immutableModelReducer,\n  formReducer: immutableFormReducer,\n  modeled: immutableModelReducerEnhancer,\n  toJS: function toJS(val) {\n    return val && val.toJS ? val.toJS() : val;\n  }\n});\n\nvar immutableCombineForms = immutableFormCombiner.combineForms;\nvar immutableCreateForms = immutableFormCombiner.createForms;\n\nvar immutableTrack = (0, _track.createTrack)(immutableStrategy);\n\nexports.formReducer = immutableFormReducer;\nexports.modelReducer = immutableModelReducer;\nexports.combineForms = immutableCombineForms;\nexports.createForms = immutableCreateForms;\nexports.initialFieldState = _index.initialFieldState;\nexports.actions = immutableActions;\nexports.actionTypes = _index.actionTypes;\nexports.controls = _controlPropsMap2.default;\nexports.Field = ImmutableField;\nexports.Control = ImmutableControl;\nexports.Form = ImmutableForm;\nexports.Errors = ImmutableErrors;\nexports.Fieldset = _fieldsetComponent2.default;\nexports.createFieldClass = _index.createFieldClass;\nexports.modeled = immutableModelReducerEnhancer;\nexports.batched = _index.batched;\nexports.form = _index.form;\nexports.getField = immutableGetFieldFromState;\nexports.getForm = immutableGetForm;\nexports.getFormStateKey = immutableGetFormStateKey;\nexports.track = immutableTrack;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/reducers/forms-reducer.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createForms = exports.createFormCombiner = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _modeledEnhancer = require('../enhancers/modeled-enhancer');\n\nvar _modeledEnhancer2 = _interopRequireDefault(_modeledEnhancer);\n\nvar _modelReducer = require('./model-reducer');\n\nvar _modelReducer2 = _interopRequireDefault(_modelReducer);\n\nvar _formReducer = require('./form-reducer');\n\nvar _formReducer2 = _interopRequireDefault(_formReducer);\n\nvar _redux = require('redux');\n\nvar _identity = require('../utils/identity');\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nvar _nullAction = require('../constants/null-action');\n\nvar _nullAction2 = _interopRequireDefault(_nullAction);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar defaults = {\n  key: 'forms',\n  plugins: []\n};\n\nfunction getSubModelString(model, subModel) {\n  if (!model) return subModel;\n\n  return model + '.' + subModel;\n}\n\nvar defaultStrategy = {\n  modelReducer: _modelReducer2.default,\n  formReducer: _formReducer2.default,\n  modeled: _modeledEnhancer2.default,\n  toJS: _identity2.default\n};\n\nvar modelCache = {};\n\nfunction cacheModelState(state) {\n  var cacheId = Date.now();\n\n  modelCache[cacheId] = state;\n\n  return cacheId;\n}\n\nfunction cacheReducer(reducer, model, cacheId) {\n  return function (state, action) {\n    var newState = reducer(state, action);\n\n    modelCache[cacheId][model] = newState;\n\n    return newState;\n  };\n}\n\nfunction createFormCombiner() {\n  var strategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultStrategy;\n\n  function createForms(forms) {\n    var model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var formKeys = Object.keys(forms);\n    var modelReducers = {};\n    var initialFormState = {};\n    var optionsWithDefaults = _extends({}, defaults, options);\n\n    var key = optionsWithDefaults.key,\n        plugins = optionsWithDefaults.plugins,\n        formOptions = _objectWithoutProperties(optionsWithDefaults, ['key', 'plugins']);\n\n    var cacheId = cacheModelState({});\n\n    formKeys.forEach(function (formKey) {\n      var formValue = forms[formKey];\n      var subModel = getSubModelString(model, formKey);\n\n      if (typeof formValue === 'function') {\n        var initialState = void 0;\n        try {\n          initialState = formValue(undefined, _nullAction2.default);\n        } catch (error) {\n          initialState = null;\n        }\n\n        modelReducers[formKey] = cacheReducer(strategy.modeled(formValue, subModel), subModel, cacheId);\n        initialFormState[formKey] = initialState;\n      } else {\n        modelReducers[formKey] = cacheReducer(strategy.modelReducer(subModel, formValue), subModel, cacheId);\n        initialFormState[formKey] = strategy.toJS(formValue);\n      }\n    });\n\n    return _extends({}, modelReducers, _defineProperty({}, key, function (state, action) {\n      return strategy.formReducer(model, initialFormState, _extends({\n        plugins: plugins\n      }, formOptions))(state, _extends({}, action, { state: Object.assign({}, modelCache[cacheId]) }));\n    }));\n  }\n\n  function combineForms(forms) {\n    var model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var mappedReducers = createForms(forms, model, options);\n\n    return (0, _redux.combineReducers)(mappedReducers);\n  }\n\n  return {\n    createForms: createForms,\n    combineForms: combineForms\n  };\n}\n\nvar _createFormCombiner = createFormCombiner(),\n    defaultCombineForms = _createFormCombiner.combineForms,\n    defaultCreateForms = _createFormCombiner.createForms;\n\nexports.default = defaultCombineForms;\nexports.createFormCombiner = createFormCombiner;\nexports.createForms = defaultCreateForms;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/components/errors-component.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createErrorsClass = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRedux = require('react-redux');\n\nvar _get2 = require('../utils/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _map = require('../utils/map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _iteratee = require('../utils/iteratee');\n\nvar _iteratee2 = _interopRequireDefault(_iteratee);\n\nvar _isPlainObject = require('../utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _omit = require('../utils/omit');\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nvar _getForm = require('../utils/get-form');\n\nvar _getForm2 = _interopRequireDefault(_getForm);\n\nvar _getFieldFromState = require('../utils/get-field-from-state');\n\nvar _getFieldFromState2 = _interopRequireDefault(_getFieldFromState);\n\nvar _getModel = require('../utils/get-model');\n\nvar _getModel2 = _interopRequireDefault(_getModel);\n\nvar _isValid = require('../form/is-valid');\n\nvar _isValid2 = _interopRequireDefault(_isValid);\n\nvar _resolveModel = require('../utils/resolve-model');\n\nvar _resolveModel2 = _interopRequireDefault(_resolveModel);\n\nvar _initialFieldState = require('../constants/initial-field-state');\n\nvar _initialFieldState2 = _interopRequireDefault(_initialFieldState);\n\nvar _shallowEqual = require('../utils/shallow-equal');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultStrategy = {\n  get: _get3.default,\n  getForm: _getForm2.default,\n  getFieldFromState: _getFieldFromState2.default\n};\n\nvar propTypes = {\n  // Computed props\n  modelValue: _propTypes2.default.any,\n  formValue: _propTypes2.default.object,\n  fieldValue: _propTypes2.default.object,\n\n  // Provided props\n  model: _propTypes2.default.string.isRequired,\n  messages: _propTypes2.default.objectOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func, _propTypes2.default.bool])),\n  show: _propTypes2.default.any,\n  wrapper: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func, _propTypes2.default.element]),\n  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func, _propTypes2.default.element]),\n  dispatch: _propTypes2.default.func,\n  dynamic: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.arrayOf(_propTypes2.default.string)]),\n  store: _propTypes2.default.shape({\n    subscribe: _propTypes2.default.func,\n    dispatch: _propTypes2.default.func,\n    getState: _propTypes2.default.func\n  }),\n  storeSubscription: _propTypes2.default.any\n};\n\nfunction showErrors(field, form) {\n  var show = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (typeof show === 'function') {\n    return show(field, form);\n  }\n\n  if (!Array.isArray(show) && (typeof show === 'undefined' ? 'undefined' : _typeof(show)) !== 'object' && typeof show !== 'string') {\n    return !!show;\n  }\n\n  return (0, _iteratee2.default)(show)(field);\n}\n\nfunction createErrorsClass() {\n  var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultStrategy;\n\n  var Errors = function (_Component) {\n    _inherits(Errors, _Component);\n\n    function Errors() {\n      _classCallCheck(this, Errors);\n\n      return _possibleConstructorReturn(this, (Errors.__proto__ || Object.getPrototypeOf(Errors)).apply(this, arguments));\n    }\n\n    _createClass(Errors, [{\n      key: 'shouldComponentUpdate',\n      value: function shouldComponentUpdate(nextProps) {\n        var fieldValue = nextProps.fieldValue,\n            formValue = nextProps.formValue;\n        var dynamic = this.props.dynamic;\n\n\n        if (dynamic) {\n          return !(0, _shallowEqual2.default)(this.props, nextProps);\n        }\n\n        return fieldValue !== this.props.fieldValue || formValue !== this.props.formValue;\n      }\n    }, {\n      key: 'mapErrorMessages',\n      value: function mapErrorMessages(errors) {\n        var _this2 = this;\n\n        var messages = this.props.messages;\n\n\n        if (typeof errors === 'string') {\n          return this.renderError(errors, 'error');\n        }\n\n        if (!errors) return null;\n\n        return (0, _map2.default)(errors, function (error, key) {\n          var message = messages[key];\n\n          if (error) {\n            if (message || typeof error === 'string') {\n              return _this2.renderError(message || error, key);\n            } else if ((0, _isPlainObject2.default)(error)) {\n              return _this2.mapErrorMessages(error);\n            }\n          }\n\n          return false;\n        }).reduce(function (a, b) {\n          return b ? a.concat(b) : a;\n        }, []);\n      }\n    }, {\n      key: 'renderError',\n      value: function renderError(message, key) {\n        var _props = this.props,\n            component = _props.component,\n            model = _props.model,\n            modelValue = _props.modelValue,\n            fieldValue = _props.fieldValue,\n            errors = _props.fieldValue.errors;\n\n\n        var errorProps = {\n          key: key,\n          model: model,\n          modelValue: modelValue,\n          fieldValue: fieldValue\n        };\n\n        var messageString = typeof message === 'function' ? message(modelValue, errors[key]) : message;\n\n        if (!messageString) return null;\n\n        var allowedProps = typeof component === 'function' ? errorProps : { key: key };\n\n        return _react2.default.createElement(component, allowedProps, messageString);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _props2 = this.props,\n            fieldValue = _props2.fieldValue,\n            formValue = _props2.formValue,\n            show = _props2.show,\n            wrapper = _props2.wrapper;\n\n\n        var allowedProps = typeof wrapper === 'function' ? this.props : (0, _omit2.default)(this.props, Object.keys(propTypes));\n\n        if (!showErrors(fieldValue, formValue, show)) {\n          return null;\n        }\n\n        var errorMessages = (0, _isValid2.default)(fieldValue) ? null : this.mapErrorMessages(fieldValue.errors);\n\n        if (!errorMessages) return null;\n\n        return _react2.default.createElement(wrapper, allowedProps, errorMessages);\n      }\n    }]);\n\n    return Errors;\n  }(_react.Component);\n\n  process.env.NODE_ENV !== \"production\" ? Errors.propTypes = propTypes : void 0;\n\n  Errors.defaultProps = {\n    wrapper: 'div',\n    component: 'span',\n    messages: {},\n    show: true,\n    dynamic: true\n  };\n\n  function mapStateToProps(state, _ref) {\n    var model = _ref.model;\n\n    var modelString = (0, _getModel2.default)(model, state);\n\n    var form = s.getForm(state, modelString);\n    (0, _invariant2.default)(form, 'Unable to retrieve errors. ' + 'Could not find form for \"%s\" in the store.', modelString);\n\n    var formValue = form.$form;\n    var fieldValue = s.getFieldFromState(state, modelString) || _initialFieldState2.default;\n\n    return {\n      model: modelString,\n      modelValue: s.get(state, modelString),\n      formValue: formValue,\n      fieldValue: fieldValue\n    };\n  }\n\n  return (0, _resolveModel2.default)((0, _reactRedux.connect)(mapStateToProps)(Errors));\n}\n\nexports.createErrorsClass = createErrorsClass;\nexports.default = createErrorsClass();","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/lib/native.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.track = exports.getField = exports.form = exports.batched = exports.modeled = exports.Fieldset = exports.Errors = exports.Form = exports.Control = exports.actionTypes = exports.actions = exports.initialFieldState = exports.combineForms = exports.modelReducer = exports.formReducer = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /* eslint-disable react/prop-types */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactNative = require('react-native');\n\nvar _index = require('./index');\n\nvar _omit = require('./utils/omit');\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getTextValue(value) {\n  if (typeof value === 'string' || typeof value === 'number') {\n    return '' + value;\n  }\n\n  return '';\n}\n\nvar noop = function noop() {\n  return undefined;\n};\n\n_index.Control.MapView = function (props) {\n  return _react2.default.createElement(_index.Control, _extends({\n    component: _reactNative.MapView,\n    updateOn: 'blur',\n    mapProps: _extends({\n      onResponderGrant: function onResponderGrant(_ref) {\n        var onFocus = _ref.onFocus;\n        return onFocus;\n      },\n      onRegionChange: function onRegionChange(_ref2) {\n        var onChange = _ref2.onChange;\n        return onChange;\n      },\n      onRegionChangeComplete: function onRegionChangeComplete(_ref3) {\n        var onBlur = _ref3.onBlur;\n        return onBlur;\n      },\n      region: function region(_ref4) {\n        var modelValue = _ref4.modelValue;\n        return modelValue;\n      }\n    }, props.mapProps)\n  }, (0, _omit2.default)(props, 'mapProps')));\n};\n\n_index.Control.Picker = function (props) {\n  return _react2.default.createElement(_index.Control, _extends({\n    component: _reactNative.Picker,\n    mapProps: _extends({\n      onResponderGrant: function onResponderGrant(_ref5) {\n        var onFocus = _ref5.onFocus;\n        return onFocus;\n      },\n      onResponderRelease: function onResponderRelease(_ref6) {\n        var onBlur = _ref6.onBlur;\n        return onBlur;\n      },\n      selectedValue: function selectedValue(_ref7) {\n        var modelValue = _ref7.modelValue;\n        return modelValue;\n      },\n      onValueChange: function onValueChange(_ref8) {\n        var onChange = _ref8.onChange;\n        return onChange;\n      },\n      onChange: noop\n    }, props.mapProps)\n  }, (0, _omit2.default)(props, 'mapProps')));\n};\n\n_index.Control.Switch = function (props) {\n  return _react2.default.createElement(_index.Control, _extends({\n    component: _reactNative.Switch,\n    mapProps: _extends({\n      onResponderGrant: function onResponderGrant(_ref9) {\n        var onFocus = _ref9.onFocus;\n        return onFocus;\n      },\n      onResponderRelease: function onResponderRelease(_ref10) {\n        var onBlur = _ref10.onBlur;\n        return onBlur;\n      },\n      value: function value(_ref11) {\n        var modelValue = _ref11.modelValue;\n        return !!modelValue;\n      },\n      onValueChange: function onValueChange(_ref12) {\n        var onChange = _ref12.onChange;\n        return onChange;\n      },\n      onChange: noop\n    }, props.mapProps)\n  }, (0, _omit2.default)(props, 'mapProps')));\n};\n\n_index.Control.TextInput = function (props) {\n  return _react2.default.createElement(_index.Control, _extends({\n    component: _reactNative.TextInput,\n    mapProps: _extends({\n      onResponderGrant: function onResponderGrant(_ref13) {\n        var onFocus = _ref13.onFocus;\n        return onFocus;\n      },\n      value: function value(_props) {\n        return !_props.defaultValue && !_props.hasOwnProperty('value') ? getTextValue(_props.viewValue) : _props.value;\n      },\n      onChangeText: function onChangeText(_ref14) {\n        var onChange = _ref14.onChange;\n        return onChange;\n      },\n      onChange: noop,\n      onBlur: function onBlur(_ref15) {\n        var _onBlur = _ref15.onBlur,\n            viewValue = _ref15.viewValue;\n        return function () {\n          return _onBlur(viewValue);\n        };\n      },\n      onFocus: function onFocus(_ref16) {\n        var _onFocus = _ref16.onFocus;\n        return _onFocus;\n      }\n    }, props.mapProps)\n  }, (0, _omit2.default)(props, 'mapProps')));\n};\n\n_index.Control.DatePickerIOS = function (props) {\n  return _react2.default.createElement(_index.Control, _extends({\n    component: _reactNative.DatePickerIOS,\n    mapProps: _extends({\n      onResponderGrant: function onResponderGrant(_ref17) {\n        var onFocus = _ref17.onFocus;\n        return onFocus;\n      },\n      onResponderRelease: function onResponderRelease(_ref18) {\n        var onBlur = _ref18.onBlur;\n        return onBlur;\n      },\n      date: function date(_ref19) {\n        var modelValue = _ref19.modelValue;\n        return modelValue;\n      },\n      onDateChange: function onDateChange(_ref20) {\n        var onChange = _ref20.onChange;\n        return onChange;\n      },\n      onChange: noop\n    }, props.mapProps)\n  }, (0, _omit2.default)(props, 'mapProps')));\n};\n\n_index.Control.SegmentedControlIOS = function (props) {\n  return _react2.default.createElement(_index.Control, _extends({\n    component: _reactNative.SegmentedControlIOS,\n    mapProps: _extends({\n      onResponderGrant: function onResponderGrant(_ref21) {\n        var onFocus = _ref21.onFocus;\n        return onFocus;\n      },\n      selectedIndex: function selectedIndex(_ref22) {\n        var values = _ref22.values,\n            modelValue = _ref22.modelValue;\n        return values.indexOf(modelValue);\n      },\n      onValueChange: function onValueChange(_ref23) {\n        var onChange = _ref23.onChange;\n        return onChange;\n      },\n      onChange: noop\n    }, props.mapProps)\n  }, (0, _omit2.default)(props, 'mapProps')));\n};\n\n_index.Control.Slider = function (props) {\n  return _react2.default.createElement(_index.Control, _extends({\n    component: _reactNative.Slider,\n    mapProps: _extends({\n      value: function value(_ref24) {\n        var modelValue = _ref24.modelValue;\n        return modelValue;\n      },\n      onResponderGrant: function onResponderGrant(_ref25) {\n        var onFocus = _ref25.onFocus;\n        return onFocus;\n      },\n      onSlidingComplete: function onSlidingComplete(_ref26) {\n        var onBlur = _ref26.onBlur;\n        return onBlur;\n      },\n      onValueChange: function onValueChange(_ref27) {\n        var onChange = _ref27.onChange;\n        return onChange;\n      },\n      onChange: noop\n    }, props.mapProps)\n  }, (0, _omit2.default)(props, 'mapProps')));\n};\n\nvar NativeForm = function NativeForm(props) {\n  return _react2.default.createElement(_index.Form, _extends({ component: _reactNative.View }, (0, _omit2.default)(props, 'mapProps')));\n};\nvar NativeFieldset = function NativeFieldset(props) {\n  return _react2.default.createElement(_index.Fieldset, _extends({ component: _reactNative.View }, (0, _omit2.default)(props, 'mapProps')));\n};\nvar NativeErrors = function NativeErrors(props) {\n  return _react2.default.createElement(_index.Errors, _extends({\n    wrapper: _reactNative.View,\n    component: _reactNative.Text\n  }, props));\n};\n\nexports.formReducer = _index.formReducer;\nexports.modelReducer = _index.modelReducer;\nexports.combineForms = _index.combineForms;\nexports.initialFieldState = _index.initialFieldState;\nexports.actions = _index.actions;\nexports.actionTypes = _index.actionTypes;\nexports.Control = _index.Control;\nexports.Form = NativeForm;\nexports.Errors = NativeErrors;\nexports.Fieldset = NativeFieldset;\nexports.modeled = _index.modeled;\nexports.batched = _index.batched;\nexports.form = _index.form;\nexports.getField = _index.getField;\nexports.track = _index.track;","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/native.js":"module.exports = require('./lib/native');\n","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/src/native.js":"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  MapView,\n  Picker,\n  DatePickerIOS,\n  Switch,\n  TextInput,\n  SegmentedControlIOS,\n  Slider,\n  Text,\n  View,\n} from 'react-native';\n\nimport {\n  modelReducer,\n  formReducer,\n  modeled,\n  actions,\n  combineForms,\n  initialFieldState,\n  actionTypes,\n  Control,\n  Form,\n  Fieldset,\n  Errors,\n  batched,\n  form,\n  getField,\n  track,\n} from './index';\nimport omit from './utils/omit';\n\nfunction getTextValue(value) {\n  if (typeof value === 'string' || typeof value === 'number') {\n    return `${value}`;\n  }\n\n  return '';\n}\n\nconst noop = () => undefined;\n\nControl.MapView = (props) => (\n  <Control\n    component={MapView}\n    updateOn=\"blur\"\n    mapProps={{\n      onResponderGrant: ({ onFocus }) => onFocus,\n      onRegionChange: ({ onChange }) => onChange,\n      onRegionChangeComplete: ({ onBlur }) => onBlur,\n      region: ({ modelValue }) => modelValue,\n      ...props.mapProps,\n    }}\n    {...omit(props, 'mapProps')}\n  />\n);\n\nControl.Picker = (props) => (\n  <Control\n    component={Picker}\n    mapProps={{\n      onResponderGrant: ({ onFocus }) => onFocus,\n      onResponderRelease: ({ onBlur }) => onBlur,\n      selectedValue: ({ modelValue }) => modelValue,\n      onValueChange: ({ onChange }) => onChange,\n      onChange: noop,\n      ...props.mapProps,\n    }}\n    {...omit(props, 'mapProps')}\n  />\n);\n\nControl.Switch = (props) => (\n  <Control\n    component={Switch}\n    mapProps={{\n      onResponderGrant: ({ onFocus }) => onFocus,\n      onResponderRelease: ({ onBlur }) => onBlur,\n      value: ({ modelValue }) => !!modelValue,\n      onValueChange: ({ onChange }) => onChange,\n      onChange: noop,\n      ...props.mapProps,\n    }}\n    {...omit(props, 'mapProps')}\n  />\n);\n\nControl.TextInput = (props) => (\n  <Control\n    component={TextInput}\n    mapProps={{\n      onResponderGrant: ({ onFocus }) => onFocus,\n      value: (_props) => ((!_props.defaultValue && !_props.hasOwnProperty('value'))\n        ? getTextValue(_props.viewValue)\n        : _props.value),\n      onChangeText: ({ onChange }) => onChange,\n      onChange: noop,\n      onBlur: ({ onBlur, viewValue }) => () => onBlur(viewValue),\n      onFocus: ({ onFocus }) => onFocus,\n      ...props.mapProps,\n    }}\n    {...omit(props, 'mapProps')}\n  />\n);\n\nControl.DatePickerIOS = (props) => (\n  <Control\n    component={DatePickerIOS}\n    mapProps={{\n      onResponderGrant: ({ onFocus }) => onFocus,\n      onResponderRelease: ({ onBlur }) => onBlur,\n      date: ({ modelValue }) => modelValue,\n      onDateChange: ({ onChange }) => onChange,\n      onChange: noop,\n      ...props.mapProps,\n    }}\n    {...omit(props, 'mapProps')}\n  />\n);\n\nControl.SegmentedControlIOS = (props) => (\n  <Control\n    component={SegmentedControlIOS}\n    mapProps={{\n      onResponderGrant: ({ onFocus }) => onFocus,\n      selectedIndex: ({ values, modelValue }) => values.indexOf(modelValue),\n      onValueChange: ({ onChange }) => onChange,\n      onChange: noop,\n      ...props.mapProps,\n    }}\n    {...omit(props, 'mapProps')}\n  />\n);\n\nControl.Slider = (props) => (\n  <Control\n    component={Slider}\n    mapProps={{\n      value: ({ modelValue }) => modelValue,\n      onResponderGrant: ({ onFocus }) => onFocus,\n      onSlidingComplete: ({ onBlur }) => onBlur,\n      onValueChange: ({ onChange }) => onChange,\n      onChange: noop,\n      ...props.mapProps,\n    }}\n    {...omit(props, 'mapProps')}\n  />\n);\n\nconst NativeForm = (props) => <Form component={View} {...omit(props, 'mapProps')} />;\nconst NativeFieldset = (props) => <Fieldset component={View} {...omit(props, 'mapProps')} />;\nconst NativeErrors = (props) => (\n  <Errors\n    wrapper={View}\n    component={Text}\n    {...props}\n  />\n);\n\nexport {\n  // Reducers\n  formReducer,\n  modelReducer,\n  combineForms,\n\n  // Constants\n  initialFieldState,\n  actions,\n  actionTypes,\n\n  // Components\n  Control,\n  NativeForm as Form,\n  NativeErrors as Errors,\n  NativeFieldset as Fieldset,\n\n  // Enhancers\n  modeled,\n  batched,\n\n  // Selectors\n  form,\n\n  // Utilities\n  getField,\n  track,\n};\n","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/webpack.config.base.js":"/* eslint strict:0 */\n'use strict';\n\nmodule.exports = {\n  externals: {\n    react: {\n      root: 'React',\n      commonjs2: 'react',\n      commonjs: 'react',\n      amd: 'react',\n    },\n    'react-dom': {\n      root: 'ReactDOM',\n      commonjs2: 'react-dom',\n      commonjs: 'react-dom',\n      amd: 'react-dom',\n    },\n    'react-redux': {\n      root: 'ReactRedux',\n      commonjs2: 'react-redux',\n      commonjs: 'react-redux',\n      amd: 'react-redux',\n    },\n    redux: {\n      root: 'Redux',\n      commonjs2: 'redux',\n      commonjs: 'redux',\n      amd: 'redux',\n    }\n  },\n  module: {\n    loaders: [\n      { test: /\\.js$/, loaders: ['babel-loader'], exclude: /node_modules/ },\n    ],\n  },\n  output: {\n    library: 'ReactReduxForm',\n    libraryTarget: 'umd',\n  },\n  resolve: {\n    extensions: ['', '.js'],\n  },\n  plugins: [],\n  // devtool: 'inline-source-map'\n};\n","/home/travis/build/npmtest/node-npmtest-react-redux-form/node_modules/react-redux-form/webpack.config.prod.js":"/* eslint strict:0 */\n'use strict';\n\nvar path = require('path');\n\nconst webpack = require('webpack');\nconst baseConfig = require('./webpack.config.base');\n\nconst config = Object.create(baseConfig);\n\nObject.assign(config, {\n  entry: path.join(__dirname, 'src/index.js'),\n});\n\nconfig.plugins = config.plugins.concat([\n  new webpack.optimize.OccurenceOrderPlugin(),\n  new webpack.DefinePlugin({\n    'process.env.NODE_ENV': JSON.stringify('production'),\n  }),\n  new webpack.optimize.DedupePlugin(),\n  new webpack.optimize.UglifyJsPlugin({\n    compressor: {\n      screw_ie8: true,\n      warnings: false,\n    },\n  }),\n]);\n\nmodule.exports = config;\n"}